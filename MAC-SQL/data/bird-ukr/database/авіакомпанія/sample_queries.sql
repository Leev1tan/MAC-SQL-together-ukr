-- Приклади SQL-запитів для бази даних "Авіакомпанія"
-- Цей файл містить приклади запитів різної складності для демонстрації можливостей бази даних

-- ====================
-- ПРОСТІ ЗАПИТИ
-- ====================

-- 1. Отримати список всіх рейсів на сьогодні
SELECT номер_рейсу, дата_час_відправлення, дата_час_прибуття,
       (SELECT назва FROM аеропорти WHERE id = (SELECT аеропорт_відправлення_id FROM маршрути WHERE id = маршрут_id)) AS аеропорт_відправлення,
       (SELECT назва FROM аеропорти WHERE id = (SELECT аеропорт_призначення_id FROM маршрути WHERE id = маршрут_id)) AS аеропорт_призначення,
       (SELECT назва FROM статуси_рейсів WHERE id = статус_id) AS статус
FROM рейси
WHERE DATE(дата_час_відправлення) = CURRENT_DATE
ORDER BY дата_час_відправлення;

-- 2. Отримати список всіх літаків, які потребують технічного обслуговування
SELECT л.реєстраційний_номер, л.серійний_номер, т.назва AS тип_літака, т.виробник,
       л.дата_останнього_техогляду, л.загальний_наліт_годин
FROM літаки л
JOIN типи_літаків т ON л.тип_літака_id = т.id
WHERE (CURRENT_DATE - л.дата_останнього_техогляду) > 30
ORDER BY л.дата_останнього_техогляду;

-- 3. Отримати список всіх аеропортів у певній країні
SELECT код_іата, код_ікао, назва, місто, часовий_пояс, 
       кількість_терміналів, кількість_злітно_посадкових_смуг
FROM аеропорти
WHERE країна = 'Україна'
ORDER BY місто;

-- 4. Отримати список всіх посад із зарплатою вище середньої
SELECT назва, опис, базова_зарплата
FROM посади
WHERE базова_зарплата > (SELECT AVG(базова_зарплата) FROM посади)
ORDER BY базова_зарплата DESC;

-- 5. Отримати список всіх рейсів з певного аеропорту
SELECT р.номер_рейсу, р.дата_час_відправлення, р.дата_час_прибуття,
       (SELECT назва FROM аеропорти WHERE id = м.аеропорт_призначення_id) AS аеропорт_призначення,
       (SELECT назва FROM статуси_рейсів WHERE id = р.статус_id) AS статус
FROM рейси р
JOIN маршрути м ON р.маршрут_id = м.id
JOIN аеропорти а ON м.аеропорт_відправлення_id = а.id
WHERE а.код_іата = 'KBP'
  AND DATE(р.дата_час_відправлення) BETWEEN CURRENT_DATE AND (CURRENT_DATE + INTERVAL '7 days')
ORDER BY р.дата_час_відправлення;

-- ====================
-- ЗАПИТИ СЕРЕДНЬОЇ СКЛАДНОСТІ
-- ====================

-- 6. Отримати список найпопулярніших напрямків за кількістю рейсів
SELECT а.назва AS аеропорт_призначення, а.місто, а.країна, COUNT(*) AS кількість_рейсів
FROM рейси р
JOIN маршрути м ON р.маршрут_id = м.id
JOIN аеропорти а ON м.аеропорт_призначення_id = а.id
WHERE DATE(р.дата_час_відправлення) BETWEEN (CURRENT_DATE - INTERVAL '30 days') AND CURRENT_DATE
GROUP BY а.назва, а.місто, а.країна
ORDER BY кількість_рейсів DESC
LIMIT 10;

-- 7. Отримати статистику заповненості рейсів за останній місяць
SELECT р.номер_рейсу, р.дата_час_відправлення,
       (р.кількість_місць_економ + р.кількість_місць_бізнес + р.кількість_місць_перший_клас) AS загальна_кількість_місць,
       (р.кількість_місць_економ + р.кількість_місць_бізнес + р.кількість_місць_перший_клас) - 
       (р.доступно_місць_економ + р.доступно_місць_бізнес + р.доступно_місць_перший_клас) AS зайнято_місць,
       ROUND(
         ((р.кількість_місць_економ + р.кількість_місць_бізнес + р.кількість_місць_перший_клас) - 
         (р.доступно_місць_економ + р.доступно_місць_бізнес + р.доступно_місць_перший_клас))::FLOAT / 
         (р.кількість_місць_економ + р.кількість_місць_бізнес + р.кількість_місць_перший_клас) * 100, 2) AS заповненість_відсоток
FROM рейси р
WHERE DATE(р.дата_час_відправлення) BETWEEN (CURRENT_DATE - INTERVAL '30 days') AND CURRENT_DATE
ORDER BY заповненість_відсоток DESC;

-- 8. Отримати середній прибуток від рейсів у певному напрямку
SELECT а1.місто AS місто_відправлення, а2.місто AS місто_призначення,
       COUNT(б.id) AS кількість_бронювань,
       ROUND(AVG(б.загальна_вартість), 2) AS середня_вартість_бронювання,
       SUM(б.загальна_вартість) AS загальний_прибуток
FROM бронювання б
JOIN рейси р ON б.рейс_id = р.id
JOIN маршрути м ON р.маршрут_id = м.id
JOIN аеропорти а1 ON м.аеропорт_відправлення_id = а1.id
JOIN аеропорти а2 ON м.аеропорт_призначення_id = а2.id
WHERE DATE(р.дата_час_відправлення) BETWEEN (CURRENT_DATE - INTERVAL '90 days') AND CURRENT_DATE
GROUP BY а1.місто, а2.місто
ORDER BY загальний_прибуток DESC
LIMIT 10;

-- 9. Отримати список пілотів із найбільшим нальотом годин за останні 3 місяці
SELECT п.прізвище, п.імя, п.по_батькові, 
       пос.назва AS посада,
       COUNT(рп.рейс_id) AS кількість_рейсів,
       SUM(
         EXTRACT(EPOCH FROM (
           COALESCE(р.фактичний_час_прибуття, р.дата_час_прибуття) - 
           COALESCE(р.фактичний_час_відправлення, р.дата_час_відправлення)
         ))/3600
       ) AS наліт_годин
FROM персонал п
JOIN посади пос ON п.посада_id = пос.id
JOIN рейси_персонал рп ON п.id = рп.персонал_id
JOIN рейси р ON рп.рейс_id = р.id
WHERE (пос.назва = 'Капітан' OR пос.назва = 'Другий пілот')
  AND DATE(р.дата_час_відправлення) BETWEEN (CURRENT_DATE - INTERVAL '90 days') AND CURRENT_DATE
  AND р.статус_id = (SELECT id FROM статуси_рейсів WHERE назва = 'Прибув')
GROUP BY п.прізвище, п.імя, п.по_батькові, пос.назва
ORDER BY наліт_годин DESC;

-- 10. Отримати список літаків з найвищим середнім завантаженням
SELECT л.реєстраційний_номер, тл.назва AS тип_літака, тл.виробник,
       COUNT(р.id) AS кількість_рейсів,
       ROUND(AVG(
         ((р.кількість_місць_економ + р.кількість_місць_бізнес + р.кількість_місць_перший_клас) - 
         (р.доступно_місць_економ + р.доступно_місць_бізнес + р.доступно_місць_перший_клас))::FLOAT / 
         (р.кількість_місць_економ + р.кількість_місць_бізнес + р.кількість_місць_перший_клас) * 100
       ), 2) AS середнє_завантаження_відсоток
FROM літаки л
JOIN типи_літаків тл ON л.тип_літака_id = тл.id
JOIN рейси р ON л.id = р.літак_id
WHERE DATE(р.дата_час_відправлення) BETWEEN (CURRENT_DATE - INTERVAL '90 days') AND CURRENT_DATE
  AND р.статус_id = (SELECT id FROM статуси_рейсів WHERE назва = 'Прибув')
GROUP BY л.реєстраційний_номер, тл.назва, тл.виробник
HAVING COUNT(р.id) > 10
ORDER BY середнє_завантаження_відсоток DESC;

-- ====================
-- СКЛАДНІ ЗАПИТИ
-- ====================

-- 11. Отримати аналіз прибутковості за класами обслуговування та напрямками
WITH booking_class_revenue AS (
  SELECT 
    м.id AS маршрут_id,
    а1.місто AS місто_відправлення,
    а2.місто AS місто_призначення,
    а1.країна AS країна_відправлення,
    а2.країна AS країна_призначення,
    ко.назва AS клас_обслуговування,
    COUNT(б.id) AS кількість_бронювань,
    SUM(б.загальна_вартість) AS загальний_прибуток
  FROM бронювання б
  JOIN рейси р ON б.рейс_id = р.id
  JOIN маршрути м ON р.маршрут_id = м.id
  JOIN аеропорти а1 ON м.аеропорт_відправлення_id = а1.id
  JOIN аеропорти а2 ON м.аеропорт_призначення_id = а2.id
  JOIN класи_обслуговування ко ON б.клас_обслуговування_id = ко.id
  WHERE DATE(р.дата_час_відправлення) BETWEEN (CURRENT_DATE - INTERVAL '180 days') AND CURRENT_DATE
    AND (б.статус_id = (SELECT id FROM статуси_бронювань WHERE назва = 'Підтверджено')
       OR б.статус_id = (SELECT id FROM статуси_бронювань WHERE назва = 'Виконано'))
  GROUP BY м.id, а1.місто, а2.місто, а1.країна, а2.країна, ко.назва
)
SELECT 
  місто_відправлення, 
  місто_призначення,
  країна_відправлення,
  країна_призначення,
  SUM(CASE WHEN клас_обслуговування = 'Економ' THEN загальний_прибуток ELSE 0 END) AS прибуток_економ,
  SUM(CASE WHEN клас_обслуговування = 'Бізнес' THEN загальний_прибуток ELSE 0 END) AS прибуток_бізнес,
  SUM(CASE WHEN клас_обслуговування = 'Перший клас' THEN загальний_прибуток ELSE 0 END) AS прибуток_перший_клас,
  SUM(загальний_прибуток) AS загальний_прибуток,
  ROUND(SUM(CASE WHEN клас_обслуговування = 'Економ' THEN загальний_прибуток ELSE 0 END) / 
        NULLIF(SUM(загальний_прибуток), 0) * 100, 2) AS відсоток_економ,
  ROUND(SUM(CASE WHEN клас_обслуговування = 'Бізнес' THEN загальний_прибуток ELSE 0 END) / 
        NULLIF(SUM(загальний_прибуток), 0) * 100, 2) AS відсоток_бізнес,
  ROUND(SUM(CASE WHEN клас_обслуговування = 'Перший клас' THEN загальний_прибуток ELSE 0 END) / 
        NULLIF(SUM(загальний_прибуток), 0) * 100, 2) AS відсоток_перший_клас
FROM booking_class_revenue
GROUP BY маршрут_id, місто_відправлення, місто_призначення, країна_відправлення, країна_призначення
HAVING SUM(загальний_прибуток) > 10000
ORDER BY загальний_прибуток DESC;

-- 12. Отримати аналіз затримок рейсів з причинами та статистикою
WITH flight_delays AS (
  SELECT 
    р.id,
    р.номер_рейсу,
    а1.місто AS місто_відправлення,
    а2.місто AS місто_призначення,
    р.дата_час_відправлення AS планове_відправлення,
    р.фактичний_час_відправлення,
    EXTRACT(EPOCH FROM (р.фактичний_час_відправлення - р.дата_час_відправлення))/60 AS затримка_хвилин,
    CASE
      WHEN EXTRACT(EPOCH FROM (р.фактичний_час_відправлення - р.дата_час_відправлення))/60 BETWEEN 1 AND 15 THEN 'Незначна (до 15 хв)'
      WHEN EXTRACT(EPOCH FROM (р.фактичний_час_відправлення - р.дата_час_відправлення))/60 BETWEEN 16 AND 60 THEN 'Помірна (16-60 хв)'
      WHEN EXTRACT(EPOCH FROM (р.фактичний_час_відправлення - р.дата_час_відправлення))/60 BETWEEN 61 AND 180 THEN 'Значна (1-3 год)'
      WHEN EXTRACT(EPOCH FROM (р.фактичний_час_відправлення - р.дата_час_відправлення))/60 > 180 THEN 'Критична (більше 3 год)'
      ELSE 'Вчасно'
    END AS категорія_затримки,
    р.погодні_умови,
    CASE
      WHEN р.погодні_умови LIKE '%сніг%' OR р.погодні_умови LIKE '%дощ%' OR р.погодні_умови LIKE '%гроза%' OR р.погодні_умови LIKE '%туман%' THEN 'Погодні умови'
      WHEN р.примітки LIKE '%технічн%' THEN 'Технічні проблеми'
      WHEN р.примітки LIKE '%екіпаж%' THEN 'Проблеми з екіпажем'
      WHEN р.примітки LIKE '%перевантаження%' OR р.примітки LIKE '%аеропорт%' THEN 'Завантаженість аеропорту'
      ELSE 'Інші причини'
    END AS причина_затримки
  FROM рейси р
  JOIN маршрути м ON р.маршрут_id = м.id
  JOIN аеропорти а1 ON м.аеропорт_відправлення_id = а1.id
  JOIN аеропорти а2 ON м.аеропорт_призначення_id = а2.id
  WHERE р.фактичний_час_відправлення IS NOT NULL
    AND р.дата_час_відправлення IS NOT NULL
    AND р.фактичний_час_відправлення > р.дата_час_відправлення
    AND DATE(р.дата_час_відправлення) BETWEEN (CURRENT_DATE - INTERVAL '180 days') AND CURRENT_DATE
)
SELECT 
  причина_затримки,
  категорія_затримки,
  COUNT(*) AS кількість_рейсів,
  ROUND(AVG(затримка_хвилин), 2) AS середня_затримка_хвилин,
  ROUND(MIN(затримка_хвилин), 2) AS мінімальна_затримка_хвилин,
  ROUND(MAX(затримка_хвилин), 2) AS максимальна_затримка_хвилин,
  STRING_AGG(DISTINCT місто_відправлення, ', ' ORDER BY місто_відправлення) AS проблемні_аеропорти_відправлення
FROM flight_delays
GROUP BY причина_затримки, категорія_затримки
ORDER BY причина_затримки, 
  CASE 
    WHEN категорія_затримки = 'Незначна (до 15 хв)' THEN 1
    WHEN категорія_затримки = 'Помірна (16-60 хв)' THEN 2
    WHEN категорія_затримки = 'Значна (1-3 год)' THEN 3
    WHEN категорія_затримки = 'Критична (більше 3 год)' THEN 4
    ELSE 5
  END;

-- 13. Рекурсивний запит для пошуку можливих маршрутів з пересадками між двома аеропортами
WITH RECURSIVE можливі_маршрути AS (
  -- Базовий випадок: прямі маршрути
  SELECT 
    м.id,
    м.аеропорт_відправлення_id,
    м.аеропорт_призначення_id,
    ARRAY[м.id] AS шлях_маршрутів,
    ARRAY[(SELECT назва FROM аеропорти WHERE id = м.аеропорт_відправлення_id), 
          (SELECT назва FROM аеропорти WHERE id = м.аеропорт_призначення_id)] AS шлях_аеропортів,
    1 AS кількість_пересадок,
    м.приблизний_час_польоту AS загальний_час,
    м.базова_вартість AS загальна_вартість
  FROM маршрути м
  WHERE м.аеропорт_відправлення_id = 
    (SELECT id FROM аеропорти WHERE код_іата = 'KBP') -- Київ (Бориспіль)
  
  UNION ALL
  
  -- Рекурсивний випадок: додавання нових маршрутів
  SELECT 
    м.id,
    мм.аеропорт_відправлення_id,
    м.аеропорт_призначення_id,
    мм.шлях_маршрутів || м.id AS шлях_маршрутів,
    мм.шлях_аеропортів || (SELECT назва FROM аеропорти WHERE id = м.аеропорт_призначення_id) AS шлях_аеропортів,
    мм.кількість_пересадок + 1 AS кількість_пересадок,
    мм.загальний_час + м.приблизний_час_польоту + 120 AS загальний_час, -- додаємо 2 години на пересадку
    мм.загальна_вартість + м.базова_вартість AS загальна_вартість
  FROM маршрути м
  JOIN можливі_маршрути мм ON м.аеропорт_відправлення_id = мм.аеропорт_призначення_id
  WHERE м.id <> ALL(мм.шлях_маршрутів) -- уникаємо циклів
    AND array_length(мм.шлях_маршрутів, 1) < 3 -- обмежуємо до 2 пересадок (3 сегменти)
)
SELECT 
  кількість_пересадок,
  array_to_string(шлях_аеропортів, ' -> ') AS маршрут,
  загальний_час,
  ROUND(загальний_час / 60.0, 2) AS загальний_час_годин,
  загальна_вартість
FROM можливі_маршрути
WHERE аеропорт_призначення_id = 
  (SELECT id FROM аеропорти WHERE код_іата = 'JFK') -- Нью-Йорк (JFK)
ORDER BY загальний_час, загальна_вартість
LIMIT 10;

-- 14. Прогноз завантаженості аеропортів на наступний місяць з використанням віконних функцій
WITH airport_load AS (
  SELECT 
    дата::DATE AS дата,
    а.код_іата,
    а.назва AS назва_аеропорту,
    а.місто,
    COUNT(CASE WHEN д.тип = 'відправлення' THEN 1 ELSE NULL END) AS кількість_відправлень,
    COUNT(CASE WHEN д.тип = 'прибуття' THEN 1 ELSE NULL END) AS кількість_прибуттів,
    COUNT(*) AS загальна_кількість_рейсів
  FROM (
    -- Генеруємо дати для наступного місяця
    SELECT generate_series(
      CURRENT_DATE,
      CURRENT_DATE + INTERVAL '30 days',
      INTERVAL '1 day'
    ) AS дата
  ) дати
  CROSS JOIN аеропорти а
  LEFT JOIN (
    -- Об'єднуємо відправлення та прибуття
    SELECT 
      м.аеропорт_відправлення_id AS аеропорт_id,
      DATE(р.дата_час_відправлення) AS дата,
      'відправлення' AS тип
    FROM рейси р
    JOIN маршрути м ON р.маршрут_id = м.id
    WHERE DATE(р.дата_час_відправлення) BETWEEN CURRENT_DATE AND (CURRENT_DATE + INTERVAL '30 days')
    
    UNION ALL
    
    SELECT 
      м.аеропорт_призначення_id AS аеропорт_id,
      DATE(р.дата_час_прибуття) AS дата,
      'прибуття' AS тип
    FROM рейси р
    JOIN маршрути м ON р.маршрут_id = м.id
    WHERE DATE(р.дата_час_прибуття) BETWEEN CURRENT_DATE AND (CURRENT_DATE + INTERVAL '30 days')
  ) д ON д.аеропорт_id = а.id AND д.дата = дати.дата
  GROUP BY дата, а.код_іата, а.назва, а.місто
)
SELECT 
  дата,
  код_іата,
  назва_аеропорту,
  місто,
  кількість_відправлень,
  кількість_прибуттів,
  загальна_кількість_рейсів,
  -- Ковзаюче середнє за 7 днів
  ROUND(AVG(загальна_кількість_рейсів) OVER (
    PARTITION BY код_іата 
    ORDER BY дата 
    ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING
  ), 2) AS ковзаюче_середнє_7_днів,
  -- Ранжування аеропортів за завантаженістю на кожен день
  RANK() OVER (
    PARTITION BY дата 
    ORDER BY загальна_кількість_рейсів DESC
  ) AS ранг_за_завантаженістю
FROM airport_load
WHERE загальна_кількість_рейсів > 0
ORDER BY дата, ранг_за_завантаженістю;

-- 15. Аналіз доходів та рентабельності різних типів літаків
WITH aircraft_revenue AS (
  SELECT 
    л.id AS літак_id,
    л.реєстраційний_номер,
    тл.назва AS тип_літака,
    тл.виробник,
    р.id AS рейс_id,
    р.номер_рейсу,
    COUNT(DISTINCT б.id) AS кількість_бронювань,
    SUM(б.загальна_вартість) AS дохід_рейсу,
    -- Приблизні витрати на рейс (залежать від відстані, часу польоту та типу літака)
    (м.відстань * 0.5 + м.приблизний_час_польоту * 50 + тл.максимальна_кількість_пасажирів * 3) AS витрати_рейсу
  FROM рейси р
  JOIN літаки л ON р.літак_id = л.id
  JOIN типи_літаків тл ON л.тип_літака_id = тл.id
  JOIN маршрути м ON р.маршрут_id = м.id
  LEFT JOIN бронювання б ON р.id = б.рейс_id
  WHERE DATE(р.дата_час_відправлення) BETWEEN (CURRENT_DATE - INTERVAL '180 days') AND CURRENT_DATE
    AND р.статус_id = (SELECT id FROM статуси_рейсів WHERE назва = 'Прибув')
  GROUP BY л.id, л.реєстраційний_номер, тл.назва, тл.виробник, р.id, р.номер_рейсу, м.відстань, м.приблизний_час_польоту, тл.максимальна_кількість_пасажирів
)
SELECT 
  тип_літака,
  виробник,
  COUNT(DISTINCT літак_id) AS кількість_літаків,
  COUNT(DISTINCT рейс_id) AS кількість_рейсів,
  ROUND(AVG(кількість_бронювань), 2) AS середня_кількість_бронювань,
  ROUND(SUM(дохід_рейсу), 2) AS загальний_дохід,
  ROUND(SUM(витрати_рейсу), 2) AS загальні_витрати,
  ROUND(SUM(дохід_рейсу) - SUM(витрати_рейсу), 2) AS прибуток,
  ROUND((SUM(дохід_рейсу) - SUM(витрати_рейсу)) / NULLIF(SUM(витрати_рейсу), 0) * 100, 2) AS рентабельність_відсоток,
  ROUND(SUM(дохід_рейсу) / COUNT(DISTINCT рейс_id), 2) AS середній_дохід_на_рейс,
  ROUND(SUM(витрати_рейсу) / COUNT(DISTINCT рейс_id), 2) AS середні_витрати_на_рейс,
  ROUND((SUM(дохід_рейсу) - SUM(витрати_рейсу)) / COUNT(DISTINCT рейс_id), 2) AS середній_прибуток_на_рейс
FROM aircraft_revenue
GROUP BY тип_літака, виробник
ORDER BY рентабельність_відсоток DESC; 