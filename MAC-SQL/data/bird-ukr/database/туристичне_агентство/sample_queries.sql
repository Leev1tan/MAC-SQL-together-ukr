-- Зразки SQL-запитів для бази даних "Туристичне агентство"
-- Запити розділені за трьома рівнями складності: простий, середній та складний

--------------------------
-- ПРОСТИЙ РІВЕНЬ ЗАПИТІВ
--------------------------

-- 1. Знайти всі активні тури, впорядковані за датою початку
SELECT id, назва, дата_початку, дата_закінчення, ціна 
FROM тури
WHERE активний = true
ORDER BY дата_початку;

-- 2. Отримати список всіх країн в алфавітному порядку
SELECT id, назва, код, валюта
FROM країни
ORDER BY назва;

-- 3. Вивести готелі з рейтингом 4 зірки і вище
SELECT id, назва, адреса, зірок
FROM готелі
WHERE зірок >= 4
ORDER BY зірок DESC, назва;

-- 4. Знайти всіх клієнтів, зареєстрованих за останні 6 місяців
SELECT id, прізвище, імя, телефон, email, дата_реєстрації
FROM клієнти
WHERE дата_реєстрації >= CURRENT_DATE - INTERVAL '6 months'
ORDER BY дата_реєстрації DESC;

-- 5. Вивести всі типи кімнат
SELECT id, назва, опис
FROM типи_кімнат;

---------------------------
-- СЕРЕДНІЙ РІВЕНЬ ЗАПИТІВ
---------------------------

-- 6. Знайти кількість бронювань турів за статусом
SELECT 
    с.назва AS статус, 
    COUNT(б.id) AS кількість_бронювань, 
    SUM(б.загальна_вартість) AS загальна_сума
FROM 
    бронювання_турів б
    JOIN статуси_бронювання с ON б.статус_id = с.id
GROUP BY 
    с.назва
ORDER BY 
    кількість_бронювань DESC;

-- 7. Знайти топ-5 найпопулярніших турів за кількістю бронювань
SELECT 
    т.назва AS тур, 
    к.назва AS країна, 
    м.назва AS місто, 
    COUNT(б.id) AS кількість_бронювань
FROM 
    тури т
    JOIN бронювання_турів б ON т.id = б.тур_id
    JOIN країни к ON т.країна_id = к.id
    JOIN міста м ON т.місто_id = м.id
GROUP BY 
    т.id, т.назва, к.назва, м.назва
ORDER BY 
    кількість_бронювань DESC
LIMIT 5;

-- 8. Підрахувати середню оцінку для кожного готелю
SELECT 
    г.назва AS готель, 
    м.назва AS місто, 
    к.назва AS країна, 
    ROUND(AVG(в.оцінка)::numeric, 1) AS середня_оцінка, 
    COUNT(в.id) AS кількість_відгуків
FROM 
    готелі г
    JOIN міста м ON г.місто_id = м.id
    JOIN країни к ON м.країна_id = к.id
    LEFT JOIN відгуки в ON г.id = в.готель_id
GROUP BY 
    г.id, г.назва, м.назва, к.назва
HAVING 
    COUNT(в.id) > 0
ORDER BY 
    середня_оцінка DESC;

-- 9. Знайти тури, які почнуться протягом наступного місяця
SELECT 
    т.назва AS тур, 
    к.назва AS країна, 
    м.назва AS місто, 
    г.назва AS готель, 
    т.дата_початку, 
    т.дата_закінчення, 
    т.ціна,
    (SELECT COUNT(б.id) FROM бронювання_турів б WHERE б.тур_id = т.id) AS кількість_бронювань
FROM 
    тури т
    JOIN країни к ON т.країна_id = к.id
    JOIN міста м ON т.місто_id = м.id
    JOIN готелі г ON т.готель_id = г.id
WHERE 
    т.дата_початку BETWEEN CURRENT_DATE AND CURRENT_DATE + INTERVAL '1 month'
    AND т.активний = true
ORDER BY 
    т.дата_початку;

-- 10. Знайти клієнтів, які бронювали більше 3 турів
SELECT 
    к.прізвище || ' ' || к.імя AS клієнт, 
    к.телефон, 
    к.email, 
    COUNT(б.id) AS кількість_бронювань, 
    SUM(б.загальна_вартість) AS загальна_сума_витрат
FROM 
    клієнти к
    JOIN бронювання_турів б ON к.id = б.клієнт_id
GROUP BY 
    к.id, к.прізвище, к.імя, к.телефон, к.email
HAVING 
    COUNT(б.id) > 3
ORDER BY 
    кількість_бронювань DESC;

---------------------------
-- СКЛАДНИЙ РІВЕНЬ ЗАПИТІВ
---------------------------

-- 11. Знайти середню ціну туру та стандартне відхилення для кожної країни
SELECT 
    к.назва AS країна, 
    COUNT(т.id) AS кількість_турів, 
    ROUND(AVG(т.ціна)::numeric, 2) AS середня_ціна, 
    ROUND(STDDEV(т.ціна)::numeric, 2) AS стандартне_відхилення
FROM 
    тури т
    JOIN країни к ON т.країна_id = к.id
GROUP BY 
    к.id, к.назва
HAVING 
    COUNT(т.id) >= 3  -- Мінімум 3 тури для отримання статистично значущих результатів
ORDER BY 
    середня_ціна DESC;

-- 12. Для кожного працівника знайти кількість бронювань та виручку за останні 3 місяці
WITH виручка_працівників AS (
    SELECT 
        п.id AS працівник_id,
        п.прізвище || ' ' || п.імя AS працівник,
        пос.назва AS посада,
        COUNT(б.id) AS кількість_бронювань,
        SUM(б.загальна_вартість) AS загальна_виручка,
        EXTRACT(MONTH FROM б.дата_бронювання) AS місяць,
        EXTRACT(YEAR FROM б.дата_бронювання) AS рік
    FROM 
        працівники п
        JOIN посади пос ON п.посада_id = пос.id
        LEFT JOIN бронювання_турів б ON п.id = б.працівник_id
    WHERE 
        б.дата_бронювання >= CURRENT_DATE - INTERVAL '3 months'
    GROUP BY 
        п.id, п.прізвище, п.імя, пос.назва, місяць, рік
)
SELECT 
    працівник,
    посада,
    SUM(кількість_бронювань) AS загальна_кількість,
    ROUND(SUM(загальна_виручка)::numeric, 2) AS загальна_сума,
    ROUND(AVG(загальна_виручка)::numeric, 2) AS середня_виручка_на_місяць,
    CASE 
        WHEN SUM(кількість_бронювань) > 10 THEN 'Висока активність'
        WHEN SUM(кількість_бронювань) > 5 THEN 'Середня активність'
        ELSE 'Низька активність'
    END AS показник_активності
FROM 
    виручка_працівників
GROUP BY 
    працівник_id, працівник, посада
ORDER BY 
    загальна_сума DESC;

-- 13. Знайти клієнтів з найбільшою кількістю поїздок у різні країни
WITH клієнти_по_країнах AS (
    SELECT 
        к.id AS клієнт_id,
        к.прізвище || ' ' || к.імя AS клієнт, 
        кр.id AS країна_id,
        кр.назва AS країна,
        COUNT(DISTINCT б.id) AS кількість_поїздок
    FROM 
        клієнти к
        JOIN бронювання_турів б ON к.id = б.клієнт_id
        JOIN тури т ON б.тур_id = т.id
        JOIN країни кр ON т.країна_id = кр.id
    GROUP BY 
        к.id, к.прізвище, к.імя, кр.id, кр.назва
)
SELECT 
    клієнт, 
    COUNT(DISTINCT країна_id) AS кількість_відвіданих_країн,
    STRING_AGG(країна, ', ' ORDER BY країна) AS відвідані_країни
FROM 
    клієнти_по_країнах
GROUP BY 
    клієнт_id, клієнт
ORDER BY 
    кількість_відвіданих_країн DESC
LIMIT 10;

-- 14. Знайти найпопулярніші пари міст (звідки-куди) для транспортних бронювань
WITH популярні_маршрути AS (
    SELECT 
        м1.назва AS місто_відправлення, 
        к1.назва AS країна_відправлення, 
        м2.назва AS місто_прибуття, 
        к2.назва AS країна_прибуття,
        COUNT(бт.id) AS кількість_бронювань
    FROM 
        бронювання_транспорту бт
        JOIN транспорт т ON бт.транспорт_id = т.id
        JOIN міста м1 ON т.місто_відправлення_id = м1.id
        JOIN міста м2 ON т.місто_прибуття_id = м2.id
        JOIN країни к1 ON м1.країна_id = к1.id
        JOIN країни к2 ON м2.країна_id = к2.id
    GROUP BY 
        м1.назва, к1.назва, м2.назва, к2.назва
)
SELECT 
    місто_відправлення, 
    країна_відправлення, 
    місто_прибуття, 
    країна_прибуття, 
    кількість_бронювань,
    RANK() OVER (ORDER BY кількість_бронювань DESC) AS рейтинг
FROM 
    популярні_маршрути
ORDER BY 
    кількість_бронювань DESC
LIMIT 15;

-- 15. Складний запит для аналізу сезонності продажів
WITH сезонні_продажі AS (
    SELECT 
        EXTRACT(YEAR FROM б.дата_бронювання) AS рік,
        EXTRACT(QUARTER FROM б.дата_бронювання) AS квартал,
        CASE 
            WHEN EXTRACT(MONTH FROM б.дата_бронювання) BETWEEN 12 AND 2 THEN 'Зима'
            WHEN EXTRACT(MONTH FROM б.дата_бронювання) BETWEEN 3 AND 5 THEN 'Весна'
            WHEN EXTRACT(MONTH FROM б.дата_бронювання) BETWEEN 6 AND 8 THEN 'Літо'
            ELSE 'Осінь'
        END AS сезон,
        COUNT(б.id) AS кількість_бронювань,
        SUM(б.загальна_вартість) AS загальна_сума
    FROM 
        бронювання_турів б
    GROUP BY 
        рік, квартал, сезон
),
сумарна_статистика AS (
    SELECT 
        рік,
        сезон,
        SUM(кількість_бронювань) AS всього_бронювань,
        SUM(загальна_сума) AS всього_продажів,
        AVG(загальна_сума) OVER (PARTITION BY рік) AS середні_продажі_за_рік,
        MAX(загальна_сума) OVER (PARTITION BY рік) AS макс_продажі_за_рік
    FROM 
        сезонні_продажі
    GROUP BY 
        рік, сезон, загальна_сума
)
SELECT 
    рік,
    сезон,
    всього_бронювань,
    ROUND(всього_продажів::numeric, 2) AS всього_продажів,
    ROUND((всього_продажів / NULLIF(SUM(всього_продажів) OVER (PARTITION BY рік), 0) * 100)::numeric, 2) AS відсоток_від_річних,
    ROUND(всього_продажів / всього_бронювань::numeric, 2) AS середня_вартість_бронювання,
    CASE 
        WHEN всього_продажів > середні_продажі_за_рік THEN 'Вище середнього'
        WHEN всього_продажів = середні_продажі_за_рік THEN 'Середньо'
        ELSE 'Нижче середнього'
    END AS показник_сезону
FROM 
    сумарна_статистика
ORDER BY 
    рік, відсоток_від_річних DESC; 