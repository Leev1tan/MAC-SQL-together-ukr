-- Приклади запитів для бази даних "Інтернет-магазин"
-- Кодування: UTF-8

-- ========================================
-- 1. Запити на вибірку даних
-- ========================================

-- 1.1. Отримати список всіх активних товарів з їх категоріями
SELECT 
    т.ід,
    т.артикул,
    т.назва AS назва_товару,
    т.ціна,
    т.кількість_на_складі,
    к.назва AS назва_категорії
FROM 
    товари т
JOIN 
    категорії к ON т.категорія_ід = к.ід
WHERE 
    т.активний = TRUE
ORDER BY 
    т.назва;

-- 1.2. Знайти товари з найвищим рейтингом (топ-10)
SELECT 
    ід,
    назва,
    ціна,
    рейтинг,
    кількість_відгуків
FROM 
    товари
WHERE 
    активний = TRUE
    AND кількість_відгуків > 0
ORDER BY 
    рейтинг DESC, 
    кількість_відгуків DESC
LIMIT 10;

-- 1.3. Знайти товари, яких залишилось мало на складі (менше 5 одиниць)
SELECT 
    ід,
    артикул,
    назва,
    кількість_на_складі,
    ціна
FROM 
    товари
WHERE 
    активний = TRUE
    AND кількість_на_складі > 0
    AND кількість_на_складі < 5
ORDER BY 
    кількість_на_складі;

-- 1.4. Отримати список всіх замовлень конкретного клієнта
SELECT 
    з.ід,
    з.номер,
    з.дата_замовлення,
    з.загальна_сума,
    з.статус,
    COUNT(п.ід) AS кількість_позицій
FROM 
    замовлення з
JOIN 
    позиції_замовлення п ON з.ід = п.замовлення_ід
WHERE 
    з.клієнт_ід = 1 -- Замінити на реальний ID клієнта
GROUP BY 
    з.ід, з.номер, з.дата_замовлення, з.загальна_сума, з.статус
ORDER BY 
    з.дата_замовлення DESC;

-- 1.5. Отримати детальну інформацію про конкретне замовлення
SELECT 
    пз.ід,
    пз.артикул,
    пз.назва_товару,
    пз.ціна_за_одиницю,
    пз.кількість,
    пз.сума,
    т.зображення_url
FROM 
    позиції_замовлення пз
LEFT JOIN 
    товари т ON пз.товар_ід = т.ід
WHERE 
    пз.замовлення_ід = 1 -- Замінити на реальний ID замовлення
ORDER BY 
    пз.ід;

-- 1.6. Отримати статистику продажів за категоріями товарів
SELECT 
    к.назва AS категорія,
    COUNT(DISTINCT з.ід) AS кількість_замовлень,
    SUM(пз.кількість) AS кількість_товарів,
    SUM(пз.сума) AS загальна_сума
FROM 
    позиції_замовлення пз
JOIN 
    товари т ON пз.товар_ід = т.ід
JOIN 
    категорії к ON т.категорія_ід = к.ід
JOIN 
    замовлення з ON пз.замовлення_ід = з.ід
WHERE 
    з.статус IN ('оплачено', 'відправлено', 'доставлено')
    AND з.дата_замовлення >= CURRENT_DATE - INTERVAL '30 days'
GROUP BY 
    к.назва
ORDER BY 
    загальна_сума DESC;

-- ========================================
-- 2. Запити на вставку даних
-- ========================================

-- 2.1. Додати новий товар
INSERT INTO товари (
    артикул, 
    назва, 
    опис, 
    ціна, 
    кількість_на_складі, 
    категорія_ід, 
    бренд, 
    вага, 
    колір, 
    матеріал, 
    зображення_url, 
    активний
) VALUES (
    'SM-PHONE-X1', 
    'Смартфон X1 Pro', 
    'Потужний смартфон з великим екраном та тривалим часом роботи від батареї', 
    15999.99, 
    100, 
    1, -- категорія "Смартфони"
    'TechBrand', 
    0.189, 
    'Чорний', 
    'Алюміній, скло', 
    'https://example.com/images/smartphone-x1.jpg', 
    TRUE
);

-- 2.2. Створити нову категорію
INSERT INTO категорії (
    назва, 
    опис, 
    батьківська_категорія_ід, 
    зображення_url, 
    порядок_сортування, 
    активна
) VALUES (
    'Планшети', 
    'Планшетні комп''ютери різних брендів та моделей', 
    3, -- категорія "Електроніка"
    'https://example.com/images/tablets.jpg', 
    3, 
    TRUE
);

-- 2.3. Додати нового клієнта
INSERT INTO клієнти (
    емейл, 
    пароль_хеш, 
    прізвище, 
    імя, 
    телефон, 
    дата_народження, 
    стать, 
    активований
) VALUES (
    'customer@example.com', 
    'hashed_password_here', 
    'Петренко', 
    'Іван', 
    '+380991234567', 
    '1985-07-15', 
    'Ч', 
    TRUE
);

-- ========================================
-- 3. Запити на оновлення даних
-- ========================================

-- 3.1. Оновити ціну товару
UPDATE товари
SET 
    ціна = 14999.99,
    стара_ціна = 15999.99,
    на_розпродажі = TRUE
WHERE 
    артикул = 'SM-PHONE-X1';

-- 3.2. Оновити статус замовлення
UPDATE замовлення
SET 
    статус = 'відправлено',
    дата_відправлення = CURRENT_TIMESTAMP
WHERE 
    номер = 'ORD-2023-12345';

-- 3.3. Змінити кількість товару на складі
UPDATE товари
SET 
    кількість_на_складі = кількість_на_складі - 1
WHERE 
    ід = 42;

-- ========================================
-- 4. Запити з використанням агрегатних функцій
-- ========================================

-- 4.1. Топ-5 клієнтів за сумою замовлень
SELECT 
    к.ід,
    к.прізвище,
    к.імя,
    COUNT(з.ід) AS кількість_замовлень,
    SUM(з.загальна_сума) AS загальна_сума_замовлень
FROM 
    клієнти к
JOIN 
    замовлення з ON к.ід = з.клієнт_ід
WHERE 
    з.статус IN ('оплачено', 'відправлено', 'доставлено')
GROUP BY 
    к.ід, к.прізвище, к.імя
ORDER BY 
    загальна_сума_замовлень DESC
LIMIT 5;

-- 4.2. Статистика продажів по місяцях
SELECT 
    TO_CHAR(з.дата_замовлення, 'YYYY-MM') AS місяць,
    COUNT(з.ід) AS кількість_замовлень,
    SUM(з.загальна_сума) AS загальна_сума,
    AVG(з.загальна_сума) AS середня_сума_замовлення
FROM 
    замовлення з
WHERE 
    з.статус IN ('оплачено', 'відправлено', 'доставлено')
    AND з.дата_замовлення >= CURRENT_DATE - INTERVAL '1 year'
GROUP BY 
    місяць
ORDER BY 
    місяць DESC;

-- 4.3. Популярність методів оплати
SELECT 
    п.метод, 
    мо.назва AS метод_оплати, 
    COUNT(п.ід) AS кількість_платежів,
    SUM(п.сума) AS загальна_сума
FROM 
    платежі п
JOIN 
    методи_оплати мо ON п.метод = мо.код
WHERE 
    п.статус = 'успішний'
GROUP BY 
    п.метод, мо.назва
ORDER BY 
    кількість_платежів DESC;

-- ========================================
-- 5. Складні запити з підзапитами
-- ========================================

-- 5.1. Товари, які не продавались за останній місяць
SELECT 
    т.ід,
    т.артикул,
    т.назва,
    т.ціна,
    т.кількість_на_складі
FROM 
    товари т
WHERE 
    т.активний = TRUE
    AND т.ід NOT IN (
        SELECT DISTINCT пз.товар_ід
        FROM позиції_замовлення пз
        JOIN замовлення з ON пз.замовлення_ід = з.ід
        WHERE з.дата_замовлення >= CURRENT_DATE - INTERVAL '30 days'
    )
ORDER BY 
    т.назва;

-- 5.2. Клієнти, які зробили більше ніж 3 замовлення
SELECT 
    к.ід,
    к.прізвище,
    к.імя,
    к.емейл,
    к.телефон,
    замовлень.кількість_замовлень
FROM 
    клієнти к
JOIN (
    SELECT 
        клієнт_ід, 
        COUNT(*) AS кількість_замовлень
    FROM 
        замовлення
    GROUP BY 
        клієнт_ід
    HAVING 
        COUNT(*) > 3
) замовлень ON к.ід = замовлень.клієнт_ід
ORDER BY 
    замовлень.кількість_замовлень DESC, к.прізвище, к.імя;

-- 5.3. Категорії товарів, у яких немає жодного товару
SELECT 
    к.ід,
    к.назва,
    к.опис
FROM 
    категорії к
LEFT JOIN 
    товари т ON к.ід = т.категорія_ід
WHERE 
    т.ід IS NULL
ORDER BY 
    к.назва;

-- ========================================
-- 6. Запити з використанням віконних функцій
-- ========================================

-- 6.1. Ранжування товарів за популярністю в кожній категорії
SELECT 
    т.ід,
    т.назва,
    к.назва AS категорія,
    т.популярність,
    RANK() OVER (
        PARTITION BY т.категорія_ід 
        ORDER BY т.популярність DESC
    ) AS ранг_в_категорії
FROM 
    товари т
JOIN 
    категорії к ON т.категорія_ід = к.ід
WHERE 
    т.активний = TRUE
ORDER BY 
    к.назва, ранг_в_категорії;

-- 6.2. Середня ціна товарів у кожній категорії
SELECT 
    т.ід,
    т.назва,
    т.ціна,
    к.назва AS категорія,
    ROUND(AVG(т.ціна) OVER (PARTITION BY т.категорія_ід), 2) AS середня_ціна_в_категорії,
    ROUND(т.ціна - AVG(т.ціна) OVER (PARTITION BY т.категорія_ід), 2) AS різниця_від_середньої
FROM 
    товари т
JOIN 
    категорії к ON т.категорія_ід = к.ід
WHERE 
    т.активний = TRUE
ORDER BY 
    к.назва, т.ціна DESC;

-- 6.3. Динаміка кількості замовлень за місяцями
SELECT 
    місяць,
    кількість_замовлень,
    LAG(кількість_замовлень, 1) OVER (ORDER BY місяць) AS кількість_попереднього_місяця,
    кількість_замовлень - LAG(кількість_замовлень, 1) OVER (ORDER BY місяць) AS зміна_від_попереднього,
    ROUND(
        (кількість_замовлень - LAG(кількість_замовлень, 1) OVER (ORDER BY місяць))::numeric / 
        NULLIF(LAG(кількість_замовлень, 1) OVER (ORDER BY місяць), 0) * 100, 
        2
    ) AS зміна_процент
FROM (
    SELECT 
        TO_CHAR(дата_замовлення, 'YYYY-MM') AS місяць,
        COUNT(*) AS кількість_замовлень
    FROM 
        замовлення
    WHERE 
        дата_замовлення >= CURRENT_DATE - INTERVAL '12 months'
    GROUP BY 
        місяць
) підсумки
ORDER BY 
    місяць; 