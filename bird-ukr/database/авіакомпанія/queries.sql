-- Приклади SQL-запитів для бази даних "Авіакомпанія"

-- 1. Отримати список усіх рейсів на певну дату з інформацією про маршрут
SELECT r.номер_рейсу, r.дата_час_відправлення, r.дата_час_прибуття, 
       a1.назва AS аеропорт_відправлення, a1.місто AS місто_відправлення, 
       a2.назва AS аеропорт_прибуття, a2.місто AS місто_прибуття,
       r.вартість_економ, r.вартість_бізнес, r.вартість_перший_клас,
       s.назва AS статус
FROM рейси r
JOIN маршрути m ON r.маршрут_id = m.id
JOIN аеропорти a1 ON m.аеропорт_відправлення_id = a1.id
JOIN аеропорти a2 ON m.аеропорт_призначення_id = a2.id
JOIN статуси_рейсів s ON r.статус_id = s.id
WHERE DATE(r.дата_час_відправлення) = '2023-08-15'
ORDER BY r.дата_час_відправлення;

-- 2. Знайти всі рейси між двома конкретними містами
SELECT r.номер_рейсу, r.дата_час_відправлення, r.дата_час_прибуття, 
       l.реєстраційний_номер AS літак,
       tl.назва AS тип_літака,
       s.назва AS статус,
       r.вартість_економ, r.доступно_місць_економ
FROM рейси r
JOIN маршрути m ON r.маршрут_id = m.id
JOIN аеропорти a1 ON m.аеропорт_відправлення_id = a1.id
JOIN аеропорти a2 ON m.аеропорт_призначення_id = a2.id
JOIN літаки l ON r.літак_id = l.id
JOIN типи_літаків tl ON l.тип_літака_id = tl.id
JOIN статуси_рейсів s ON r.статус_id = s.id
WHERE a1.місто = 'Київ' AND a2.місто = 'Львів'
  AND r.дата_час_відправлення > CURRENT_TIMESTAMP
ORDER BY r.дата_час_відправлення;

-- 3. Отримати інформацію про пасажирів на конкретному рейсі
SELECT p.прізвище, p.імя, p.по_батькові, p.номер_паспорта,
       bp.номер_місця, ko.назва AS клас_обслуговування,
       b.номер_бронювання, b.загальна_вартість
FROM пасажири p
JOIN бронювання_пасажири bp ON p.id = bp.пасажир_id
JOIN бронювання b ON bp.бронювання_id = b.id
JOIN рейси r ON b.рейс_id = r.id
JOIN класи_обслуговування ko ON b.клас_обслуговування_id = ko.id
WHERE r.номер_рейсу = 'PS101'
ORDER BY bp.номер_місця;

-- 4. Список всіх літаків із детальною інформацією про них і дату останнього техобслуговування
SELECT l.id, l.реєстраційний_номер, l.серійний_номер,
       tl.назва AS тип_літака, tl.виробник,
       l.рік_випуску, l.загальний_наліт_годин, l.статус,
       (
           SELECT MAX(to_date.дата_завершення)
           FROM технічне_обслуговування to_date
           WHERE to_date.літак_id = l.id AND to_date.статус_id = 3
       ) AS дата_останнього_техобслуговування
FROM літаки l
JOIN типи_літаків tl ON l.тип_літака_id = tl.id
ORDER BY l.id;

-- 5. Список персоналу, призначеного на конкретний рейс
SELECT p.прізвище, p.імя, p.по_батькові, 
       pos.назва AS посада, 
       rp.роль
FROM персонал p
JOIN рейси_персонал rp ON p.id = rp.персонал_id
JOIN рейси r ON rp.рейс_id = r.id
JOIN посади pos ON p.посада_id = pos.id
WHERE r.номер_рейсу = 'PS101'
ORDER BY 
    CASE 
        WHEN rp.роль = 'Капітан' THEN 1
        WHEN rp.роль = 'Другий пілот' THEN 2
        ELSE 3
    END;

-- 6. Показати всі бронювання за певний період з деталями
SELECT b.номер_бронювання, b.дата_бронювання,
       r.номер_рейсу, r.дата_час_відправлення,
       a1.місто AS місто_відправлення, a2.місто AS місто_прибуття,
       COUNT(bp.id) AS кількість_пасажирів,
       ko.назва AS клас_обслуговування,
       mo.назва AS метод_оплати,
       sb.назва AS статус_бронювання,
       b.загальна_вартість
FROM бронювання b
JOIN рейси r ON b.рейс_id = r.id
JOIN маршрути m ON r.маршрут_id = m.id
JOIN аеропорти a1 ON m.аеропорт_відправлення_id = a1.id
JOIN аеропорти a2 ON m.аеропорт_призначення_id = a2.id
JOIN бронювання_пасажири bp ON b.id = bp.бронювання_id
JOIN класи_обслуговування ko ON b.клас_обслуговування_id = ko.id
JOIN методи_оплати mo ON b.метод_оплати_id = mo.id
JOIN статуси_бронювань sb ON b.статус_id = sb.id
WHERE b.дата_бронювання BETWEEN '2023-07-20' AND '2023-07-25'
GROUP BY b.номер_бронювання, b.дата_бронювання, r.номер_рейсу, r.дата_час_відправлення,
         a1.місто, a2.місто, ko.назва, mo.назва, sb.назва, b.загальна_вартість
ORDER BY b.дата_бронювання;

-- 7. Знайти найбільш завантажені маршрути (за кількістю пасажирів)
SELECT a1.місто AS місто_відправлення, a2.місто AS місто_прибуття,
       COUNT(bp.id) AS кількість_пасажирів
FROM бронювання_пасажири bp
JOIN бронювання b ON bp.бронювання_id = b.id
JOIN рейси r ON b.рейс_id = r.id
JOIN маршрути m ON r.маршрут_id = m.id
JOIN аеропорти a1 ON m.аеропорт_відправлення_id = a1.id
JOIN аеропорти a2 ON m.аеропорт_призначення_id = a2.id
GROUP BY a1.місто, a2.місто
ORDER BY COUNT(bp.id) DESC
LIMIT 5;

-- 8. Розрахувати загальний дохід від рейсів за певний період
SELECT SUM(b.загальна_вартість) AS загальний_дохід
FROM бронювання b
JOIN рейси r ON b.рейс_id = r.id
WHERE r.дата_час_відправлення BETWEEN '2023-08-01' AND '2023-08-31'
  AND b.статус_id = 2; -- Тільки підтверджені бронювання

-- 9. Знайти всі додаткові послуги, замовлені для конкретного бронювання
SELECT pos.назва, pos.опис, np.кількість, np.загальна_вартість
FROM надані_послуги np
JOIN послуги pos ON np.послуга_id = pos.id
WHERE np.бронювання_id = 1;

-- 10. Знайти найпопулярніші послуги
SELECT pos.назва, COUNT(np.id) AS кількість_замовлень, SUM(np.загальна_вартість) AS загальний_дохід
FROM надані_послуги np
JOIN послуги pos ON np.послуга_id = pos.id
GROUP BY pos.назва
ORDER BY COUNT(np.id) DESC;

-- 11. Список пасажирів, які часто літають (більше 3 польотів)
SELECT p.прізвище, p.імя, p.по_батькові, COUNT(bp.id) AS кількість_польотів
FROM пасажири p
JOIN бронювання_пасажири bp ON p.id = bp.пасажир_id
JOIN бронювання b ON bp.бронювання_id = b.id
GROUP BY p.id, p.прізвище, p.імя, p.по_батькові
HAVING COUNT(bp.id) > 3
ORDER BY COUNT(bp.id) DESC;

-- 12. Знайти рейси з вільними місцями в бізнес-класі
SELECT r.номер_рейсу, r.дата_час_відправлення, 
       a1.місто AS місто_відправлення, a2.місто AS місто_прибуття,
       r.доступно_місць_бізнес, r.вартість_бізнес
FROM рейси r
JOIN маршрути m ON r.маршрут_id = m.id
JOIN аеропорти a1 ON m.аеропорт_відправлення_id = a1.id
JOIN аеропорти a2 ON m.аеропорт_призначення_id = a2.id
WHERE r.доступно_місць_бізнес > 0
  AND r.дата_час_відправлення > CURRENT_TIMESTAMP
ORDER BY r.дата_час_відправлення;

-- 13. Розрахувати середнє завантаження рейсів за маршрутами (у відсотках)
SELECT a1.місто AS місто_відправлення, a2.місто AS місто_прибуття,
       ROUND(AVG(100 - (r.доступно_місць_економ * 100.0 / r.кількість_місць_економ)), 2) AS середнє_завантаження_економ,
       ROUND(AVG(100 - (r.доступно_місць_бізнес * 100.0 / r.кількість_місць_бізнес)), 2) AS середнє_завантаження_бізнес
FROM рейси r
JOIN маршрути m ON r.маршрут_id = m.id
JOIN аеропорти a1 ON m.аеропорт_відправлення_id = a1.id
JOIN аеропорти a2 ON m.аеропорт_призначення_id = a2.id
WHERE r.дата_час_відправлення < CURRENT_TIMESTAMP -- тільки минулі рейси
GROUP BY a1.місто, a2.місто
ORDER BY AVG(100 - (r.доступно_місць_економ * 100.0 / r.кількість_місць_економ)) DESC;

-- 14. Знайти всі рейси, що виконуються конкретним літаком
SELECT r.номер_рейсу, r.дата_час_відправлення, r.дата_час_прибуття,
       a1.місто AS місто_відправлення, a2.місто AS місто_прибуття,
       s.назва AS статус
FROM рейси r
JOIN маршрути m ON r.маршрут_id = m.id
JOIN аеропорти a1 ON m.аеропорт_відправлення_id = a1.id
JOIN аеропорти a2 ON m.аеропорт_призначення_id = a2.id
JOIN статуси_рейсів s ON r.статус_id = s.id
JOIN літаки l ON r.літак_id = l.id
WHERE l.реєстраційний_номер = 'UR-AAA'
ORDER BY r.дата_час_відправлення;

-- 15. Список технічного обслуговування для конкретного літака
SELECT to_date.тип_обслуговування, to_date.опис, 
       to_date.дата_початку, to_date.дата_завершення,
       p.прізвище || ' ' || p.імя AS відповідальний,
       s.назва AS статус, to_date.вартість
FROM технічне_обслуговування to_date
JOIN літаки l ON to_date.літак_id = l.id
JOIN персонал p ON to_date.відповідальний_техніка_id = p.id
JOIN статуси_техобслуговування s ON to_date.статус_id = s.id
WHERE l.реєстраційний_номер = 'UR-AAA'
ORDER BY to_date.дата_початку DESC;

-- 16. Знайти кількість рейсів, виконаних кожним пілотом
SELECT p.прізвище, p.імя, COUNT(rp.id) AS кількість_рейсів
FROM персонал p
JOIN рейси_персонал rp ON p.id = rp.персонал_id
JOIN посади pos ON p.посада_id = pos.id
WHERE pos.назва IN ('Пілот', 'Другий пілот')
  AND rp.роль IN ('Капітан', 'Другий пілот')
GROUP BY p.id, p.прізвище, p.імя
ORDER BY COUNT(rp.id) DESC;

-- 17. Знайти загальну вартість технічного обслуговування для кожного літака
SELECT l.реєстраційний_номер, tl.назва AS тип_літака,
       COUNT(to_date.id) AS кількість_обслуговувань,
       SUM(to_date.вартість) AS загальна_вартість
FROM літаки l
JOIN типи_літаків tl ON l.тип_літака_id = tl.id
LEFT JOIN технічне_обслуговування to_date ON l.id = to_date.літак_id
GROUP BY l.id, l.реєстраційний_номер, tl.назва
ORDER BY SUM(to_date.вартість) DESC;

-- 18. Знайти пасажирів, у яких день народження в поточному місяці
SELECT p.прізвище, p.імя, p.по_батькові, p.дата_народження
FROM пасажири p
WHERE EXTRACT(MONTH FROM p.дата_народження) = EXTRACT(MONTH FROM CURRENT_DATE)
ORDER BY EXTRACT(DAY FROM p.дата_народження);

-- 19. Знайти рейси, що затримуються найчастіше
SELECT r.номер_рейсу, a1.місто AS місто_відправлення, a2.місто AS місто_прибуття,
       COUNT(*) AS кількість_затримок
FROM рейси r
JOIN маршрути m ON r.маршрут_id = m.id
JOIN аеропорти a1 ON m.аеропорт_відправлення_id = a1.id
JOIN аеропорти a2 ON m.аеропорт_призначення_id = a2.id
WHERE r.статус_id = 6 -- Затримано
GROUP BY r.номер_рейсу, a1.місто, a2.місто
ORDER BY COUNT(*) DESC;

-- 20. Отримати середню зарплату за посадами
SELECT pos.назва AS посада, ROUND(AVG(p.зарплата), 2) AS середня_зарплата,
       MIN(p.зарплата) AS мінімальна_зарплата,
       MAX(p.зарплата) AS максимальна_зарплата
FROM персонал p
JOIN посади pos ON p.посада_id = pos.id
GROUP BY pos.id, pos.назва
ORDER BY AVG(p.зарплата) DESC; 