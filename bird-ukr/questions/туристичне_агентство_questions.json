[
    {
        "question_id": "туристичне_агентство_001",
        "db_id": "туристичне_агентство",
        "question": "Скільки активних турів пропонує агентство?",
        "gold_sql": "SELECT COUNT(*) FROM тури WHERE активний = true;",
        "difficulty": "simple"
    },
    {
        "question_id": "туристичне_агентство_002",
        "db_id": "туристичне_агентство",
        "question": "Які готелі з 5 зірками є в базі даних?",
        "gold_sql": "SELECT назва, адреса FROM готелі WHERE зірок = 5;",
        "difficulty": "simple"
    },
    {
        "question_id": "туристичне_агентство_003",
        "db_id": "туристичне_агентство",
        "question": "Які країни представлені в агентстві?",
        "gold_sql": "SELECT назва, континент FROM країни ORDER BY назва;",
        "difficulty": "simple"
    },
    {
        "question_id": "туристичне_агентство_004",
        "db_id": "туристичне_агентство",
        "question": "Скільки клієнтів зареєстровано в агентстві за останній рік?",
        "gold_sql": "SELECT COUNT(*) FROM клієнти WHERE дата_реєстрації >= CURRENT_DATE - INTERVAL '1 year';",
        "difficulty": "simple"
    },
    {
        "question_id": "туристичне_агентство_005",
        "db_id": "туристичне_агентство",
        "question": "Які працівники мають найвищу зарплату?",
        "gold_sql": "SELECT прізвище, імя, зарплата FROM працівники ORDER BY зарплата DESC LIMIT 5;",
        "difficulty": "simple"
    },
    {
        "question_id": "туристичне_агентство_006",
        "db_id": "туристичне_агентство",
        "question": "Які методи оплати доступні клієнтам?",
        "gold_sql": "SELECT назва, опис FROM методи_оплати;",
        "difficulty": "simple"
    },
    {
        "question_id": "туристичне_агентство_007",
        "db_id": "туристичне_агентство",
        "question": "Які тури доступні для бронювання в Італії на наступний місяць?",
        "gold_sql": "\n        SELECT т.назва, т.дата_початку, т.дата_закінчення, т.ціна, г.назва AS готель\n        FROM тури т\n        JOIN країни к ON т.країна_id = к.id\n        LEFT JOIN готелі г ON т.готель_id = г.id\n        WHERE к.назва = 'Італія'\n        AND т.дата_початку BETWEEN CURRENT_DATE AND (CURRENT_DATE + INTERVAL '1 month')\n        AND т.активний = true;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "туристичне_агентство_008",
        "db_id": "туристичне_агентство",
        "question": "Скільки бронювань оформив кожен працівник за останній квартал?",
        "gold_sql": "\n        SELECT \n            п.прізвище, \n            п.імя, \n            COUNT(б.id) AS кількість_бронювань\n        FROM працівники п\n        LEFT JOIN бронювання_турів б ON п.id = б.працівник_id\n        WHERE б.дата_бронювання >= CURRENT_DATE - INTERVAL '3 months'\n        GROUP BY п.id, п.прізвище, п.імя\n        ORDER BY кількість_бронювань DESC;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "туристичне_агентство_009",
        "db_id": "туристичне_агентство",
        "question": "Які готелі найпопулярніші серед клієнтів (за кількістю бронювань)?",
        "gold_sql": "\n        SELECT \n            г.назва AS готель, \n            м.назва AS місто, \n            к.назва AS країна,\n            г.зірок,\n            COUNT(бг.id) AS кількість_бронювань\n        FROM готелі г\n        JOIN міста м ON г.місто_id = м.id\n        JOIN країни к ON м.країна_id = к.id\n        LEFT JOIN бронювання_готелів бг ON г.id = бг.готель_id\n        GROUP BY г.id, г.назва, м.назва, к.назва, г.зірок\n        ORDER BY кількість_бронювань DESC\n        LIMIT 10;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "туристичне_агентство_010",
        "db_id": "туристичне_агентство",
        "question": "Яка середня вартість бронювання туру по країнах?",
        "gold_sql": "\n        SELECT \n            к.назва AS країна, \n            ROUND(AVG(бт.загальна_вартість), 2) AS середня_вартість,\n            COUNT(бт.id) AS кількість_бронювань\n        FROM бронювання_турів бт\n        JOIN тури т ON бт.тур_id = т.id\n        JOIN країни к ON т.країна_id = к.id\n        GROUP BY к.id, к.назва\n        HAVING COUNT(бт.id) > 0\n        ORDER BY середня_вартість DESC;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "туристичне_агентство_011",
        "db_id": "туристичне_агентство",
        "question": "Які клієнти здійснили найбільше бронювань за останній рік?",
        "gold_sql": "\n        SELECT \n            к.прізвище, \n            к.імя, \n            COUNT(DISTINCT бт.id) AS бронювань_турів,\n            COUNT(DISTINCT бг.id) AS бронювань_готелів,\n            COUNT(DISTINCT бтр.id) AS бронювань_транспорту,\n            (COUNT(DISTINCT бт.id) + COUNT(DISTINCT бг.id) + COUNT(DISTINCT бтр.id)) AS всього_бронювань\n        FROM клієнти к\n        LEFT JOIN бронювання_турів бт ON к.id = бт.клієнт_id AND бт.дата_бронювання >= CURRENT_DATE - INTERVAL '1 year'\n        LEFT JOIN бронювання_готелів бг ON к.id = бг.клієнт_id AND бг.дата_бронювання >= CURRENT_DATE - INTERVAL '1 year'\n        LEFT JOIN бронювання_транспорту бтр ON к.id = бтр.клієнт_id AND бтр.дата_бронювання >= CURRENT_DATE - INTERVAL '1 year'\n        GROUP BY к.id, к.прізвище, к.імя\n        HAVING (COUNT(DISTINCT бт.id) + COUNT(DISTINCT бг.id) + COUNT(DISTINCT бтр.id)) > 0\n        ORDER BY всього_бронювань DESC\n        LIMIT 10;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "туристичне_агентство_012",
        "db_id": "туристичне_агентство",
        "question": "Які типи кімнат найчастіше бронюють у готелях?",
        "gold_sql": "\n        SELECT \n            тк.назва AS тип_кімнати, \n            COUNT(бг.id) AS кількість_бронювань\n        FROM типи_кімнат тк\n        JOIN бронювання_готелів бг ON тк.id = бг.тип_кімнати_id\n        GROUP BY тк.id, тк.назва\n        ORDER BY кількість_бронювань DESC;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "туристичне_агентство_013",
        "db_id": "туристичне_агентство",
        "question": "Які місяці є найпопулярнішими для подорожей до різних країн?",
        "gold_sql": "\n        WITH місячні_тури AS (\n            SELECT \n                к.назва AS країна,\n                EXTRACT(MONTH FROM т.дата_початку) AS місяць,\n                COUNT(*) AS кількість_турів,\n                COUNT(DISTINCT бт.id) AS кількість_бронювань\n            FROM тури т\n            JOIN країни к ON т.країна_id = к.id\n            LEFT JOIN бронювання_турів бт ON т.id = бт.тур_id\n            WHERE т.дата_початку >= CURRENT_DATE - INTERVAL '1 year'\n            GROUP BY к.назва, EXTRACT(MONTH FROM т.дата_початку)\n        ),\n        рейтинг_місяців AS (\n            SELECT \n                країна,\n                місяць,\n                кількість_турів,\n                кількість_бронювань,\n                RANK() OVER (PARTITION BY країна ORDER BY кількість_бронювань DESC) AS ранг\n            FROM місячні_тури\n        )\n        SELECT \n            країна,\n            місяць,\n            TO_CHAR(TO_DATE(місяць::text, 'MM'), 'Month') AS назва_місяця,\n            кількість_турів,\n            кількість_бронювань\n        FROM рейтинг_місяців\n        WHERE ранг = 1\n        ORDER BY країна;\n        ",
        "difficulty": "complex"
    },
    {
        "question_id": "туристичне_агентство_014",
        "db_id": "туристичне_агентство",
        "question": "Які країни мають найкраще співвідношення позитивних відгуків до загальної кількості відгуків?",
        "gold_sql": "\n        WITH відгуки_країн AS (\n            SELECT \n                к.id AS країна_id,\n                к.назва AS країна,\n                в.оцінка,\n                CASE WHEN в.оцінка >= 4 THEN 1 ELSE 0 END AS позитивний_відгук\n            FROM відгуки в\n            JOIN готелі г ON в.готель_id = г.id\n            JOIN міста м ON г.місто_id = м.id\n            JOIN країни к ON м.країна_id = к.id\n            UNION ALL\n            SELECT \n                к.id AS країна_id,\n                к.назва AS країна,\n                в.оцінка,\n                CASE WHEN в.оцінка >= 4 THEN 1 ELSE 0 END AS позитивний_відгук\n            FROM відгуки в\n            JOIN тури т ON в.тур_id = т.id\n            JOIN країни к ON т.країна_id = к.id\n        )\n        SELECT \n            країна,\n            COUNT(*) AS всього_відгуків,\n            SUM(позитивний_відгук) AS позитивних_відгуків,\n            ROUND(AVG(оцінка), 2) AS середня_оцінка,\n            ROUND((SUM(позитивний_відгук)::float / COUNT(*)) * 100, 2) AS відсоток_позитивних\n        FROM відгуки_країн\n        GROUP BY країна_id, країна\n        HAVING COUNT(*) >= 10\n        ORDER BY відсоток_позитивних DESC, середня_оцінка DESC\n        LIMIT 10;\n        ",
        "difficulty": "complex"
    },
    {
        "question_id": "туристичне_агентство_015",
        "db_id": "туристичне_агентство",
        "question": "Які працівники принесли найбільший прибуток агентству за останній рік?",
        "gold_sql": "\n        WITH доходи_працівників AS (\n            -- Доходи від бронювання турів\n            SELECT \n                п.id AS працівник_id,\n                п.прізвище,\n                п.імя,\n                SUM(бт.загальна_вартість) AS дохід_від_турів,\n                COUNT(DISTINCT бт.id) AS кількість_турів\n            FROM працівники п\n            JOIN бронювання_турів бт ON п.id = бт.працівник_id\n            WHERE бт.дата_бронювання >= CURRENT_DATE - INTERVAL '1 year'\n            GROUP BY п.id, п.прізвище, п.імя\n        ),\n        доходи_від_готелів AS (\n            -- Доходи від бронювання готелів\n            SELECT \n                п.id AS працівник_id,\n                SUM(бг.вартість) AS дохід_від_готелів,\n                COUNT(DISTINCT бг.id) AS кількість_готелів\n            FROM працівники п\n            JOIN бронювання_готелів бг ON п.id = бг.працівник_id\n            WHERE бг.дата_бронювання >= CURRENT_DATE - INTERVAL '1 year'\n            GROUP BY п.id\n        ),\n        доходи_від_транспорту AS (\n            -- Доходи від бронювання транспорту\n            SELECT \n                п.id AS працівник_id,\n                SUM(бт.вартість) AS дохід_від_транспорту,\n                COUNT(DISTINCT бт.id) AS кількість_транспорту\n            FROM працівники п\n            JOIN бронювання_транспорту бт ON п.id = бт.працівник_id\n            WHERE бт.дата_бронювання >= CURRENT_DATE - INTERVAL '1 year'\n            GROUP BY п.id\n        )\n        SELECT \n            дп.прізвище,\n            дп.імя,\n            пос.назва AS посада,\n            COALESCE(дп.дохід_від_турів, 0) AS дохід_від_турів,\n            COALESCE(дг.дохід_від_готелів, 0) AS дохід_від_готелів,\n            COALESCE(дт.дохід_від_транспорту, 0) AS дохід_від_транспорту,\n            COALESCE(дп.дохід_від_турів, 0) + COALESCE(дг.дохід_від_готелів, 0) + COALESCE(дт.дохід_від_транспорту, 0) AS загальний_дохід,\n            COALESCE(дп.кількість_турів, 0) AS кількість_турів,\n            COALESCE(дг.кількість_готелів, 0) AS кількість_готелів,\n            COALESCE(дт.кількість_транспорту, 0) AS кількість_транспорту\n        FROM доходи_працівників дп\n        LEFT JOIN доходи_від_готелів дг ON дп.працівник_id = дг.працівник_id\n        LEFT JOIN доходи_від_транспорту дт ON дп.працівник_id = дт.працівник_id\n        JOIN посади пос ON (SELECT посада_id FROM працівники WHERE id = дп.працівник_id) = пос.id\n        ORDER BY загальний_дохід DESC\n        LIMIT 10;\n        ",
        "difficulty": "complex"
    },
    {
        "question_id": "туристичне_агентство_016",
        "db_id": "туристичне_агентство",
        "question": "Проаналізуйте прибутковість турів за тривалістю та типом харчування.",
        "gold_sql": "\n        WITH статистика_турів AS (\n            SELECT \n                т.id AS тур_id,\n                т.тривалість,\n                т.тип_харчування,\n                CASE \n                    WHEN т.тривалість <= 3 THEN 'Короткий (до 3 днів)'\n                    WHEN т.тривалість <= 7 THEN 'Середній (4-7 днів)'\n                    WHEN т.тривалість <= 14 THEN 'Довгий (8-14 днів)'\n                    ELSE 'Дуже довгий (більше 14 днів)'\n                END AS категорія_тривалості,\n                COALESCE(т.тип_харчування, 'Без харчування') AS категорія_харчування,\n                COUNT(DISTINCT бт.id) AS кількість_бронювань,\n                SUM(бт.загальна_вартість) AS загальний_дохід,\n                CASE WHEN COUNT(DISTINCT бт.id) > 0 \n                    THEN SUM(бт.загальна_вартість) / COUNT(DISTINCT бт.id) \n                    ELSE 0 \n                END AS середня_вартість_бронювання\n            FROM тури т\n            LEFT JOIN бронювання_турів бт ON т.id = бт.тур_id\n            WHERE т.дата_початку >= CURRENT_DATE - INTERVAL '1 year'\n            GROUP BY т.id, т.тривалість, т.тип_харчування\n        )\n        SELECT \n            категорія_тривалості,\n            категорія_харчування,\n            COUNT(DISTINCT тур_id) AS кількість_турів,\n            SUM(кількість_бронювань) AS загальна_кількість_бронювань,\n            ROUND(SUM(загальний_дохід), 2) AS загальний_дохід,\n            ROUND(AVG(CASE WHEN кількість_бронювань > 0 THEN кількість_бронювань ELSE NULL END), 2) AS середня_кількість_бронювань_на_тур,\n            ROUND(AVG(CASE WHEN середня_вартість_бронювання > 0 THEN середня_вартість_бронювання ELSE NULL END), 2) AS середня_вартість_бронювання\n        FROM статистика_турів\n        GROUP BY категорія_тривалості, категорія_харчування\n        ORDER BY категорія_тривалості, категорія_харчування;\n        ",
        "difficulty": "complex"
    },
    {
        "question_id": "туристичне_агентство_017",
        "db_id": "туристичне_агентство",
        "question": "Які туристичні напрямки демонструють найбільший ріст популярності за останній рік?",
        "gold_sql": "\n        WITH квартальні_бронювання AS (\n            SELECT \n                к.назва AS країна,\n                м.назва AS місто,\n                EXTRACT(QUARTER FROM бт.дата_бронювання) AS квартал,\n                EXTRACT(YEAR FROM бт.дата_бронювання) AS рік,\n                COUNT(DISTINCT бт.id) AS кількість_бронювань\n            FROM бронювання_турів бт\n            JOIN тури т ON бт.тур_id = т.id\n            JOIN країни к ON т.країна_id = к.id\n            JOIN міста м ON т.місто_id = м.id\n            WHERE бт.дата_бронювання >= CURRENT_DATE - INTERVAL '1 year'\n            GROUP BY к.назва, м.назва, EXTRACT(QUARTER FROM бт.дата_бронювання), EXTRACT(YEAR FROM бт.дата_бронювання)\n        ),\n        зведені_дані AS (\n            SELECT \n                країна,\n                місто,\n                SUM(CASE WHEN (рік = EXTRACT(YEAR FROM CURRENT_DATE) AND квартал = EXTRACT(QUARTER FROM CURRENT_DATE)) \n                    OR (рік = EXTRACT(YEAR FROM CURRENT_DATE - INTERVAL '3 months') AND квартал = EXTRACT(QUARTER FROM CURRENT_DATE - INTERVAL '3 months'))\n                    THEN кількість_бронювань ELSE 0 END) AS останній_квартал,\n                SUM(CASE WHEN (рік = EXTRACT(YEAR FROM CURRENT_DATE - INTERVAL '3 months') AND квартал = EXTRACT(QUARTER FROM CURRENT_DATE - INTERVAL '3 months'))\n                    OR (рік = EXTRACT(YEAR FROM CURRENT_DATE - INTERVAL '6 months') AND квартал = EXTRACT(QUARTER FROM CURRENT_DATE - INTERVAL '6 months'))\n                    THEN кількість_бронювань ELSE 0 END) AS передостанній_квартал,\n                SUM(кількість_бронювань) AS загальна_кількість_бронювань\n            FROM квартальні_бронювання\n            GROUP BY країна, місто\n            HAVING SUM(кількість_бронювань) >= 10\n        )\n        SELECT \n            країна,\n            місто,\n            останній_квартал,\n            передостанній_квартал,\n            CASE \n                WHEN передостанній_квартал = 0 THEN 100\n                ELSE ROUND(((останній_квартал - передостанній_квартал)::float / передостанній_квартал) * 100, 2)\n            END AS відсоток_росту,\n            загальна_кількість_бронювань\n        FROM зведені_дані\n        WHERE останній_квартал > передостанній_квартал\n        ORDER BY відсоток_росту DESC\n        LIMIT 10;\n        ",
        "difficulty": "complex"
    }
]