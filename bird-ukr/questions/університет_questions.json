[
    {
        "question_id": "університет_001",
        "db_id": "університет",
        "question": "Скільки викладачів працює в університеті?",
        "gold_sql": "SELECT COUNT(*) FROM викладачі WHERE активний = TRUE;",
        "difficulty": "simple"
    },
    {
        "question_id": "університет_002",
        "db_id": "університет",
        "question": "Які факультети є в університеті?",
        "gold_sql": "SELECT назва, скорочення FROM факультети WHERE активний = TRUE ORDER BY назва;",
        "difficulty": "simple"
    },
    {
        "question_id": "університет_003",
        "db_id": "університет",
        "question": "Скільки студентів навчається в кожній групі?",
        "gold_sql": "SELECT назва, кількість_студентів FROM групи WHERE активна = TRUE ORDER BY кількість_студентів DESC;",
        "difficulty": "simple"
    },
    {
        "question_id": "університет_004",
        "db_id": "університет",
        "question": "Які курси мають найбільшу кількість кредитів?",
        "gold_sql": "SELECT назва, кількість_кредитів FROM курси WHERE активний = TRUE ORDER BY кількість_кредитів DESC LIMIT 5;",
        "difficulty": "simple"
    },
    {
        "question_id": "університет_005",
        "db_id": "університет",
        "question": "Скільки студентів навчається на бюджеті?",
        "gold_sql": "SELECT COUNT(*) FROM студенти WHERE фінансування = 'бюджет';",
        "difficulty": "simple"
    },
    {
        "question_id": "університет_006",
        "db_id": "університет",
        "question": "Які аудиторії мають найбільшу місткість?",
        "gold_sql": "SELECT номер, місткість, тип FROM аудиторії ORDER BY місткість DESC LIMIT 10;",
        "difficulty": "simple"
    },
    {
        "question_id": "університет_007",
        "db_id": "університет",
        "question": "Скільки студентів навчається на кожному факультеті?",
        "gold_sql": "\n        SELECT \n            ф.назва AS факультет, \n            COUNT(с.ід) AS кількість_студентів\n        FROM факультети ф\n        JOIN кафедри к ON ф.ід = к.факультет_ід\n        JOIN напрями н ON к.ід = н.кафедра_ід\n        JOIN групи г ON н.ід = г.напрям_ід\n        JOIN студенти с ON г.ід = с.група_ід\n        WHERE с.статус_ід = (SELECT ід FROM статуси_студентів WHERE назва = 'Активний')\n        GROUP BY ф.ід, ф.назва\n        ORDER BY кількість_студентів DESC;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "університет_008",
        "db_id": "університет",
        "question": "Які викладачі ведуть найбільше курсів?",
        "gold_sql": "\n        SELECT \n            в.прізвище, \n            в.імя,\n            COUNT(DISTINCT з.курс_ід) AS кількість_курсів\n        FROM викладачі в\n        JOIN заняття з ON в.ід = з.викладач_ід\n        WHERE з.семестр_ід = (SELECT ід FROM семестри WHERE є_активним = TRUE)\n        GROUP BY в.ід, в.прізвище, в.імя\n        ORDER BY кількість_курсів DESC\n        LIMIT 10;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "університет_009",
        "db_id": "університет",
        "question": "Яка середня успішність студентів за факультетами?",
        "gold_sql": "\n        SELECT \n            ф.назва AS факультет,\n            ROUND(AVG(CAST(о.оцінка AS NUMERIC)), 2) AS середній_бал,\n            COUNT(DISTINCT с.ід) AS кількість_студентів\n        FROM факультети ф\n        JOIN кафедри к ON ф.ід = к.факультет_ід\n        JOIN напрями н ON к.ід = н.кафедра_ід\n        JOIN групи г ON н.ід = г.напрям_ід\n        JOIN студенти с ON г.ід = с.група_ід\n        JOIN записи_на_курси зк ON с.ід = зк.студент_ід\n        JOIN оцінки о ON зк.ід = о.запис_на_курс_ід\n        WHERE о.оцінка IS NOT NULL AND о.оцінка <> 'Н/З'\n        GROUP BY ф.ід, ф.назва\n        ORDER BY середній_бал DESC;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "університет_010",
        "db_id": "університет",
        "question": "Яке навантаження у кожного викладача в поточному семестрі?",
        "gold_sql": "\n        SELECT \n            в.прізвище,\n            в.імя,\n            COUNT(з.ід) AS кількість_занять,\n            SUM(CASE WHEN тз.назва = 'Лекція' THEN 1 ELSE 0 END) AS лекції,\n            SUM(CASE WHEN тз.назва = 'Практичне' THEN 1 ELSE 0 END) AS практичні,\n            SUM(CASE WHEN тз.назва = 'Лабораторна' THEN 1 ELSE 0 END) AS лабораторні,\n            ROUND(SUM(EXTRACT(EPOCH FROM (рз.час_кінця - рз.час_початку))/3600), 2) AS загальні_години\n        FROM викладачі в\n        JOIN заняття з ON в.ід = з.викладач_ід\n        JOIN типи_занять тз ON з.тип_заняття_ід = тз.ід\n        JOIN розклад_занять рз ON з.ід = рз.заняття_ід\n        WHERE рз.семестр_ід = (SELECT ід FROM семестри WHERE є_активним = TRUE)\n        GROUP BY в.ід, в.прізвище, в.імя\n        ORDER BY загальні_години DESC;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "університет_011",
        "db_id": "університет",
        "question": "Які курси мають найнижчу успішність студентів?",
        "gold_sql": "\n        SELECT \n            к.назва AS курс,\n            к.код,\n            ROUND(AVG(CASE WHEN о.оцінка ~ '^[0-9]+$' THEN CAST(о.оцінка AS INTEGER) ELSE NULL END), 2) AS середній_бал,\n            COUNT(DISTINCT зк.студент_ід) AS кількість_студентів,\n            COUNT(CASE WHEN о.оцінка ~ '^[0-9]+$' AND CAST(о.оцінка AS INTEGER) < 60 THEN 1 ELSE NULL END) AS кількість_незадовільних\n        FROM курси к\n        JOIN записи_на_курси зк ON к.ід = зк.курс_ід\n        JOIN оцінки о ON зк.ід = о.запис_на_курс_ід\n        WHERE зк.семестр_ід = (SELECT ід FROM семестри WHERE є_активним = TRUE)\n        GROUP BY к.ід, к.назва, к.код\n        HAVING COUNT(DISTINCT зк.студент_ід) >= 5\n        ORDER BY середній_бал ASC\n        LIMIT 10;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "університет_012",
        "db_id": "університет",
        "question": "Як розподілені аудиторії між факультетами?",
        "gold_sql": "\n        SELECT \n            ф.назва AS факультет,\n            б.назва AS будівля,\n            COUNT(DISTINCT а.ід) AS кількість_аудиторій,\n            SUM(а.місткість) AS загальна_місткість,\n            ROUND(AVG(а.місткість), 2) AS середня_місткість,\n            STRING_AGG(DISTINCT а.тип, ', ') AS типи_аудиторій\n        FROM факультети ф\n        JOIN будівлі б ON ф.ід = б.факультет_ід\n        JOIN аудиторії а ON б.ід = а.будівля_ід\n        GROUP BY ф.ід, ф.назва, б.ід, б.назва\n        ORDER BY кількість_аудиторій DESC;\n        ",
        "difficulty": "medium"
    },
    {
        "question_id": "університет_013",
        "db_id": "університет",
        "question": "Які студенти мають найвищу успішність на кожному факультеті?",
        "gold_sql": "\n        WITH студенти_успішність AS (\n            SELECT \n                с.ід AS студент_ід,\n                с.прізвище,\n                с.імя,\n                г.назва AS група,\n                н.назва AS напрям,\n                ф.ід AS факультет_ід,\n                ф.назва AS факультет,\n                ROUND(AVG(CASE WHEN о.оцінка ~ '^[0-9]+$' THEN CAST(о.оцінка AS INTEGER) ELSE NULL END), 2) AS середній_бал,\n                COUNT(DISTINCT зк.курс_ід) AS кількість_курсів\n            FROM студенти с\n            JOIN групи г ON с.група_ід = г.ід\n            JOIN напрями н ON г.напрям_ід = н.ід\n            JOIN кафедри к ON н.кафедра_ід = к.ід\n            JOIN факультети ф ON к.факультет_ід = ф.ід\n            JOIN записи_на_курси зк ON с.ід = зк.студент_ід\n            JOIN оцінки о ON зк.ід = о.запис_на_курс_ід\n            WHERE о.оцінка IS NOT NULL \n            AND о.оцінка <> 'Н/З'\n            AND с.статус_ід = (SELECT ід FROM статуси_студентів WHERE назва = 'Активний')\n            GROUP BY с.ід, с.прізвище, с.імя, г.назва, н.назва, ф.ід, ф.назва\n            HAVING COUNT(DISTINCT зк.курс_ід) >= 5\n        ),\n        ранжування AS (\n            SELECT \n                студент_ід,\n                прізвище,\n                імя,\n                група,\n                напрям,\n                факультет_ід,\n                факультет,\n                середній_бал,\n                кількість_курсів,\n                RANK() OVER (PARTITION BY факультет_ід ORDER BY середній_бал DESC) AS ранг\n            FROM студенти_успішність\n        )\n        SELECT \n            факультет,\n            прізвище,\n            імя,\n            група,\n            напрям,\n            середній_бал,\n            кількість_курсів\n        FROM ранжування\n        WHERE ранг <= 3\n        ORDER BY факультет, ранг;\n        ",
        "difficulty": "complex"
    },
    {
        "question_id": "університет_014",
        "db_id": "університет",
        "question": "Яке навантаження аудиторій в різні дні тижня?",
        "gold_sql": "\n        WITH завантаження_аудиторій AS (\n            SELECT \n                а.ід AS аудиторія_ід,\n                а.номер,\n                а.тип,\n                б.назва AS будівля,\n                EXTRACT(DOW FROM рз.дата) AS день_тижня,\n                TO_CHAR(рз.дата, 'Day') AS назва_дня,\n                COUNT(рз.ід) AS кількість_занять,\n                SUM(EXTRACT(EPOCH FROM (рз.час_кінця - рз.час_початку))/3600) AS загальні_години,\n                COUNT(DISTINCT рз.заняття_ід) AS кількість_курсів\n            FROM аудиторії а\n            JOIN будівлі б ON а.будівля_ід = б.ід\n            JOIN розклад_занять рз ON а.ід = рз.аудиторія_ід\n            WHERE рз.семестр_ід = (SELECT ід FROM семестри WHERE є_активним = TRUE)\n            GROUP BY а.ід, а.номер, а.тип, б.назва, EXTRACT(DOW FROM рз.дата), TO_CHAR(рз.дата, 'Day')\n        ),\n        загальне_навантаження AS (\n            SELECT\n                аудиторія_ід,\n                SUM(загальні_години) AS загальні_години_за_тиждень\n            FROM завантаження_аудиторій\n            GROUP BY аудиторія_ід\n        )\n        SELECT \n            за.номер AS аудиторія,\n            за.тип,\n            за.будівля,\n            за.назва_дня AS день_тижня,\n            за.кількість_занять,\n            ROUND(за.загальні_години, 2) AS годин_на_день,\n            ROUND(зн.загальні_години_за_тиждень, 2) AS годин_на_тиждень,\n            ROUND(за.загальні_години / NULLIF(зн.загальні_години_за_тиждень, 0) * 100, 2) AS відсоток_навантаження\n        FROM завантаження_аудиторій за\n        JOIN загальне_навантаження зн ON за.аудиторія_ід = зн.аудиторія_ід\n        ORDER BY зн.загальні_години_за_тиждень DESC, за.аудиторія_ід, за.день_тижня;\n        ",
        "difficulty": "complex"
    },
    {
        "question_id": "університет_015",
        "db_id": "університет",
        "question": "Які кафедри найбільш ефективні за співвідношенням кількості студентів до кількості викладачів?",
        "gold_sql": "\n        WITH студенти_кафедр AS (\n            SELECT \n                к.ід AS кафедра_ід,\n                COUNT(DISTINCT с.ід) AS кількість_студентів\n            FROM кафедри к\n            JOIN напрями н ON к.ід = н.кафедра_ід\n            JOIN групи г ON н.ід = г.напрям_ід\n            JOIN студенти с ON г.ід = с.група_ід\n            WHERE с.статус_ід = (SELECT ід FROM статуси_студентів WHERE назва = 'Активний')\n            GROUP BY к.ід\n        ),\n        викладачі_кафедр AS (\n            SELECT \n                к.ід AS кафедра_ід,\n                COUNT(DISTINCT в.ід) AS кількість_викладачів\n            FROM кафедри к\n            JOIN викладачі в ON к.ід = в.кафедра_ід\n            WHERE в.активний = TRUE\n            GROUP BY к.ід\n        ),\n        курси_кафедр AS (\n            SELECT \n                к.ід AS кафедра_ід,\n                COUNT(DISTINCT кур.ід) AS кількість_курсів,\n                SUM(кур.кількість_кредитів) AS загальна_кількість_кредитів\n            FROM кафедри к\n            JOIN курси кур ON к.ід = кур.кафедра_ід\n            WHERE кур.активний = TRUE\n            GROUP BY к.ід\n        )\n        SELECT \n            ф.назва AS факультет,\n            к.назва AS кафедра,\n            COALESCE(ск.кількість_студентів, 0) AS студентів,\n            COALESCE(вк.кількість_викладачів, 0) AS викладачів,\n            COALESCE(кк.кількість_курсів, 0) AS курсів,\n            CASE \n                WHEN COALESCE(вк.кількість_викладачів, 0) = 0 THEN NULL\n                ELSE ROUND(COALESCE(ск.кількість_студентів, 0)::numeric / COALESCE(вк.кількість_викладачів, 1), 2)\n            END AS студентів_на_викладача,\n            CASE \n                WHEN COALESCE(вк.кількість_викладачів, 0) = 0 THEN NULL\n                ELSE ROUND(COALESCE(кк.кількість_курсів, 0)::numeric / COALESCE(вк.кількість_викладачів, 1), 2)\n            END AS курсів_на_викладача,\n            CASE \n                WHEN COALESCE(ск.кількість_студентів, 0) = 0 THEN NULL\n                ELSE ROUND(COALESCE(кк.загальна_кількість_кредитів, 0)::numeric / COALESCE(ск.кількість_студентів, 1), 2)\n            END AS кредитів_на_студента\n        FROM кафедри к\n        JOIN факультети ф ON к.факультет_ід = ф.ід\n        LEFT JOIN студенти_кафедр ск ON к.ід = ск.кафедра_ід\n        LEFT JOIN викладачі_кафедр вк ON к.ід = вк.кафедра_ід\n        LEFT JOIN курси_кафедр кк ON к.ід = кк.кафедра_ід\n        WHERE к.активна = TRUE\n        ORDER BY студентів_на_викладача DESC NULLS LAST;\n        ",
        "difficulty": "complex"
    },
    {
        "question_id": "університет_016",
        "db_id": "університет",
        "question": "Як розподілені оцінки студентів за різними типами занять?",
        "gold_sql": "\n        WITH розподіл_оцінок AS (\n            SELECT \n                тз.назва AS тип_заняття,\n                CASE \n                    WHEN о.оцінка ~ '^[0-9]+$' AND CAST(о.оцінка AS INTEGER) >= 90 THEN 'A (відмінно)'\n                    WHEN о.оцінка ~ '^[0-9]+$' AND CAST(о.оцінка AS INTEGER) >= 82 THEN 'B (дуже добре)'\n                    WHEN о.оцінка ~ '^[0-9]+$' AND CAST(о.оцінка AS INTEGER) >= 74 THEN 'C (добре)'\n                    WHEN о.оцінка ~ '^[0-9]+$' AND CAST(о.оцінка AS INTEGER) >= 64 THEN 'D (задовільно)'\n                    WHEN о.оцінка ~ '^[0-9]+$' AND CAST(о.оцінка AS INTEGER) >= 60 THEN 'E (достатньо)'\n                    WHEN о.оцінка ~ '^[0-9]+$' AND CAST(о.оцінка AS INTEGER) < 60 THEN 'F (незадовільно)'\n                    ELSE о.оцінка\n                END AS оцінка_літера,\n                COUNT(*) AS кількість\n            FROM заняття з\n            JOIN типи_занять тз ON з.тип_заняття_ід = тз.ід\n            JOIN записи_на_курси зк ON з.курс_ід = зк.курс_ід\n            JOIN оцінки о ON зк.ід = о.запис_на_курс_ід AND з.ід = о.заняття_ід\n            WHERE о.оцінка IS NOT NULL\n            AND зк.семестр_ід = (SELECT ід FROM семестри WHERE є_активним = TRUE)\n            GROUP BY тз.назва, оцінка_літера\n        ),\n        загальна_кількість AS (\n            SELECT \n                тип_заняття,\n                SUM(кількість) AS загальна_кількість\n            FROM розподіл_оцінок\n            GROUP BY тип_заняття\n        )\n        SELECT \n            ро.тип_заняття,\n            ро.оцінка_літера,\n            ро.кількість,\n            ROUND(CAST(ро.кількість AS numeric) / зк.загальна_кількість * 100, 2) AS відсоток\n        FROM розподіл_оцінок ро\n        JOIN загальна_кількість зк ON ро.тип_заняття = зк.тип_заняття\n        ORDER BY ро.тип_заняття, \n            CASE \n                WHEN ро.оцінка_літера = 'A (відмінно)' THEN 1\n                WHEN ро.оцінка_літера = 'B (дуже добре)' THEN 2\n                WHEN ро.оцінка_літера = 'C (добре)' THEN 3\n                WHEN ро.оцінка_літера = 'D (задовільно)' THEN 4\n                WHEN ро.оцінка_літера = 'E (достатньо)' THEN 5\n                WHEN ро.оцінка_літера = 'F (незадовільно)' THEN 6\n                ELSE 7\n            END;\n        ",
        "difficulty": "complex"
    },
    {
        "question_id": "університет_017",
        "db_id": "університет",
        "question": "Який відсоток відвідуваності занять за різними курсами та групами?",
        "gold_sql": "\n        WITH розклад_курсів AS (\n            SELECT \n                к.ід AS курс_ід,\n                к.назва AS курс,\n                г.ід AS група_ід,\n                г.назва AS група,\n                COUNT(DISTINCT рз.ід) AS загальна_кількість_занять\n            FROM курси к\n            JOIN заняття з ON к.ід = з.курс_ід\n            JOIN розклад_занять рз ON з.ід = рз.заняття_ід\n            JOIN записи_на_курси зк ON к.ід = зк.курс_ід\n            JOIN студенти с ON зк.студент_ід = с.ід\n            JOIN групи г ON с.група_ід = г.ід\n            WHERE рз.семестр_ід = (SELECT ід FROM семестри WHERE є_активним = TRUE)\n            AND рз.дата <= CURRENT_DATE\n            GROUP BY к.ід, к.назва, г.ід, г.назва\n        ),\n        відвідуваність AS (\n            SELECT \n                к.ід AS курс_ід,\n                г.ід AS група_ід,\n                COUNT(DISTINCT рз.ід) AS відвідані_заняття,\n                COUNT(DISTINCT с.ід) AS кількість_студентів\n            FROM курси к\n            JOIN заняття з ON к.ід = з.курс_ід\n            JOIN розклад_занять рз ON з.ід = рз.заняття_ід\n            JOIN записи_на_курси зк ON к.ід = зк.курс_ід\n            JOIN студенти с ON зк.студент_ід = с.ід\n            JOIN групи г ON с.група_ід = г.ід\n            LEFT JOIN навчальні_матеріали нм ON з.ід = нм.заняття_ід\n            WHERE рз.семестр_ід = (SELECT ід FROM семестри WHERE є_активним = TRUE)\n            AND рз.дата <= CURRENT_DATE\n            AND EXISTS (\n                SELECT 1 FROM оцінки о \n                WHERE о.запис_на_курс_ід = зк.ід \n                AND о.заняття_ід = з.ід \n                AND о.відвідування = TRUE\n            )\n            GROUP BY к.ід, г.ід\n        )\n        SELECT \n            рк.курс,\n            рк.група,\n            рк.загальна_кількість_занять,\n            COALESCE(в.відвідані_заняття, 0) AS відвідані_заняття,\n            COALESCE(в.кількість_студентів, 0) AS кількість_студентів,\n            CASE \n                WHEN рк.загальна_кількість_занять = 0 THEN 0\n                ELSE ROUND(COALESCE(в.відвідані_заняття, 0)::numeric / рк.загальна_кількість_занять * 100, 2)\n            END AS відсоток_відвідуваності\n        FROM розклад_курсів рк\n        LEFT JOIN відвідуваність в ON рк.курс_ід = в.курс_ід AND рк.група_ід = в.група_ід\n        ORDER BY відсоток_відвідуваності DESC;\n        ",
        "difficulty": "complex"
    }
]