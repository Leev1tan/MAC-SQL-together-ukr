{
    "авіакомпанія_gen_012": {
        "db_id": "авіакомпанія",
        "question": "Яка середня тривалість технічного обслуговування для кожного типу літака?",
        "error_message": "function pg_catalog.extract(unknown, integer) does not exist",
        "gold_sql": "SELECT tl.назва AS тип_літака, AVG(t.дата_завершення - t.дата_початку) AS середня_тривалість_днів FROM технічне_обслуговування t JOIN літаки l ON t.літак_id = l.id JOIN типи_літаків tl ON l.тип_літака_id = tl.id WHERE t.дата_завершення IS NOT NULL AND t.дата_початку IS NOT NULL AND t.дата_завершення >= t.дата_початку GROUP BY tl.назва;"
    },
    "лікарня_gen_005": {
        "db_id": "лікарня",
        "question": "Скільки лікарів мають спеціалізацію 'Хірургія'?",
        "error_message": "column с.id does not exist",
        "gold_sql": "SELECT COUNT(DISTINCT сл.лікар_ід) FROM спеціалізації_лікарів сл JOIN спеціалізації с ON сл.спеціалізація_ід = с.ід WHERE с.назва = 'Хірургія';"
    },
    "лікарня_gen_007": {
        "db_id": "лікарня",
        "question": "Які візити були скасовані за останній тиждень?",
        "error_message": "column п.id does not exist",
        "gold_sql": "SELECT в.ід, п.прізвище AS пацієнт, пер.прізвище AS лікар, в.дата_час FROM візити в JOIN пацієнти п ON в.пацієнт_ід = п.ід JOIN персонал пер ON в.лікар_ід = пер.ід WHERE в.статус = 'скасований' AND в.дата_час >= CURRENT_DATE - INTERVAL '7 days';"
    },
    "лікарня_gen_008": {
        "db_id": "лікарня",
        "question": "Порахуйте середню зарплату для кожної категорії персоналу.",
        "error_message": "column пп.id does not exist",
        "gold_sql": "SELECT пп.категорія, AVG(п.зарплата) AS середня_зарплата FROM персонал п JOIN посади_персоналу пп ON п.посада_ід = пп.ід WHERE п.активний = TRUE GROUP BY пп.категорія;"
    },
    "лікарня_gen_009": {
        "db_id": "лікарня",
        "question": "Перелічіть діагнози, встановлені пацієнту з ID 123.",
        "error_message": "column х.id does not exist",
        "gold_sql": "SELECT х.назва, д.дата_встановлення, пер.прізвище AS лікар FROM діагнози д JOIN хвороби х ON д.хвороба_ід = х.ід JOIN персонал пер ON д.лікар_ід = пер.ід WHERE д.пацієнт_ід = 123 ORDER BY д.дата_встановлення DESC;"
    },
    "лікарня_gen_011": {
        "db_id": "лікарня",
        "question": "Для кожного відділення знайдіть кількість госпіталізацій за останній місяць.",
        "error_message": "column в.id does not exist",
        "gold_sql": "SELECT в.назва, COUNT(г.ід) AS кількість_госпіталізацій FROM відділення в LEFT JOIN госпіталізації г ON в.ід = г.відділення_ід AND г.дата_надходження >= CURRENT_DATE - INTERVAL '1 month' WHERE в.активне = TRUE GROUP BY в.назва ORDER BY кількість_госпіталізацій DESC;"
    },
    "лікарня_gen_012": {
        "db_id": "лікарня",
        "question": "Знайдіть лікарів, які виписали найбільше рецептів за останній квартал.",
        "error_message": "column п.id does not exist",
        "gold_sql": "SELECT п.імя, п.прізвище, COUNT(р.ід) AS кількість_рецептів FROM персонал п JOIN рецепти р ON п.ід = р.лікар_ід WHERE р.дата_виписки >= CURRENT_DATE - INTERVAL '3 months' GROUP BY п.ід, п.імя, п.прізвище ORDER BY кількість_рецептів DESC LIMIT 10;"
    },
    "лікарня_gen_013": {
        "db_id": "лікарня",
        "question": "Визначте середню тривалість госпіталізації для пацієнтів з хворобою 'Пневмонія'.",
        "error_message": "column д.id does not exist",
        "gold_sql": "SELECT AVG(EXTRACT(DAY FROM (г.дата_виписки - г.дата_надходження))) AS середня_тривалість_днів FROM госпіталізації г JOIN діагнози д ON г.діагноз_ід = д.ід JOIN хвороби х ON д.хвороба_ід = х.ід WHERE х.назва = 'Пневмонія' AND г.дата_виписки IS NOT NULL AND г.дата_надходження IS NOT NULL;"
    },
    "лікарня_gen_014": {
        "db_id": "лікарня",
        "question": "Знайдіть пацієнтів, які мали візити до кардіолога та невролога.",
        "error_message": "column п.id does not exist",
        "gold_sql": "WITH PatientVisits AS ( SELECT в.пацієнт_ід, с.назва AS спеціалізація FROM візити в JOIN персонал п ON в.лікар_ід = п.ід JOIN спеціалізації_лікарів сл ON п.ід = сл.лікар_ід JOIN спеціалізації с ON сл.спеціалізація_ід = с.ід WHERE с.назва IN ('Кардіологія', 'Неврологія') ) SELECT п.прізвище, п.імя FROM пацієнти п JOIN PatientVisits pv ON п.ід = pv.пацієнт_ід GROUP BY п.ід, п.прізвище, п.імя HAVING COUNT(DISTINCT pv.спеціалізація) = 2;"
    },
    "лікарня_gen_015": {
        "db_id": "лікарня",
        "question": "Порахуйте загальну суму наданих платних послуг за минулий місяць для кожної страхової компанії.",
        "error_message": "column пос.id does not exist",
        "gold_sql": "SELECT ск.назва, SUM(пос.ціна) AS загальна_сума FROM надані_послуги нп JOIN послуги пос ON нп.послуга_ід = пос.ід JOIN пацієнти п ON нп.пацієнт_ід = п.ід JOIN страховки_пацієнтів сп ON п.ід = сп.пацієнт_ід JOIN страхові_компанії ск ON сп.страхова_компанія_ід = ск.ід WHERE нп.дата_час >= date_trunc('month', CURRENT_DATE - interval '1 month') AND нп.дата_час < date_trunc('month', CURRENT_DATE) AND пос.ціна > 0 AND сп.активна = TRUE GROUP BY ск.назва ORDER BY загальна_сума DESC;"
    },
    "ресторан_gen_007": {
        "db_id": "ресторан",
        "question": "Які замовлення обслуговував офіціант 'Петро Сидоренко'?",
        "error_message": "column п.id does not exist",
        "gold_sql": "SELECT з.ід, з.дата_час, з.фінальна_сума FROM замовлення з JOIN персонал п ON з.офіціант_ід = п.ід WHERE п.імя = 'Петро' AND п.прізвище = 'Сидоренко';"
    },
    "ресторан_gen_008": {
        "db_id": "ресторан",
        "question": "Яка середня вартість страв у категорії 'Десерти'?",
        "error_message": "column к.id does not exist",
        "gold_sql": "SELECT AVG(с.ціна) FROM страви с JOIN категорії к ON с.категорія_ід = к.ід WHERE к.назва = 'Десерти' AND с.активна = TRUE;"
    },
    "ресторан_gen_009": {
        "db_id": "ресторан",
        "question": "Знайдіть резервації на сьогоднішній вечір (після 18:00).",
        "error_message": "column с.id does not exist",
        "gold_sql": "SELECT р.ід, с.номер AS столик, р.прізвище_клієнта, р.телефон_клієнта, р.час_початку FROM резервації р JOIN столики с ON р.столик_ід = с.ід JOIN статуси_резервацій ст ON р.статус_ід = ст.ід WHERE р.дата = CURRENT_DATE AND р.час_початку >= '18:00:00' AND ст.назва = 'Підтверджено';"
    },
    "ресторан_gen_010": {
        "db_id": "ресторан",
        "question": "Скільки інгредієнтів постачає постачальник 'Продукти Плюс'?",
        "error_message": "column p.id does not exist",
        "gold_sql": "SELECT COUNT(i.ід) FROM інгредієнти i JOIN постачальники p ON i.постачальник_ід = p.ід WHERE p.назва = 'Продукти Плюс' AND i.активний = TRUE;"
    },
    "ресторан_gen_011": {
        "db_id": "ресторан",
        "question": "Визначте 5 найпопулярніших страв за кількістю замовлень.",
        "error_message": "column с.id does not exist",
        "gold_sql": "SELECT с.назва, COUNT(пз.ід) AS кількість_замовлень FROM страви с JOIN позиції_замовлення пз ON с.ід = пз.страва_ід GROUP BY с.назва, с.ід ORDER BY кількість_замовлень DESC LIMIT 5;"
    },
    "ресторан_gen_012": {
        "db_id": "ресторан",
        "question": "Знайдіть офіціантів, чия середня сума замовлення перевищує 500 за останній місяць.",
        "error_message": "column п.id does not exist",
        "gold_sql": "SELECT п.імя, п.прізвище, AVG(з.фінальна_сума) AS середня_сума_замовлення FROM персонал п JOIN замовлення з ON п.ід = з.офіціант_ід JOIN посади по ON п.посада_ід = по.ід WHERE по.назва = 'Офіціант' AND з.дата_час >= CURRENT_DATE - INTERVAL '1 month' GROUP BY п.ід, п.імя, п.прізвище HAVING AVG(з.фінальна_сума) > 500;"
    },
    "ресторан_gen_014": {
        "db_id": "ресторан",
        "question": "Розрахуйте загальну суму чайових за минулий тиждень.",
        "error_message": "column \"id\" does not exist",
        "gold_sql": "SELECT SUM(чайові) AS загальні_чайові FROM замовлення WHERE дата_час >= CURRENT_DATE - INTERVAL '7 days' AND статус_ід IN (SELECT ід FROM статуси_замовлень WHERE є_фінальним = TRUE);"
    },
    "ресторан_gen_015": {
        "db_id": "ресторан",
        "question": "Знайдіть клієнтів, які робили резервації та не з'явилися.",
        "error_message": "column ср.id does not exist",
        "gold_sql": "SELECT DISTINCT р.прізвище_клієнта, р.імя_клієнта, р.телефон_клієнта FROM резервації р JOIN статуси_резервацій ср ON р.статус_ід = ср.ід WHERE ср.назва = 'Не з''явився';"
    },
    "університет_gen_001": {
        "db_id": "університет",
        "question": "Скільки студентів навчається на кожному факультеті?",
        "error_message": "column t1.id does not exist",
        "gold_sql": "SELECT T1.назва ,  count(*) FROM факультети AS T1 JOIN кафедри AS T2 ON T1.ід  =  T2.факультет_ід JOIN напрями AS N ON T2.ід = N.кафедра_ід JOIN групи AS T3 ON N.ід  =  T3.напрям_ід JOIN студенти AS T4 ON T3.ід  =  T4.група_ід GROUP BY T1.ід, T1.назва;"
    },
    "університет_gen_002": {
        "db_id": "університет",
        "question": "Перелічіть усі курси, які викладає викладач з прізвищем 'Мельник'.",
        "error_message": "column t1.id does not exist",
        "gold_sql": "SELECT T2.назва FROM викладачі AS T1 JOIN заняття AS T3 ON T1.ід  =  T3.викладач_ід JOIN курси AS T2 ON T3.курс_ід  =  T2.ід WHERE T1.прізвище  =  'Мельник';"
    },
    "університет_gen_003": {
        "db_id": "університет",
        "question": "Який середній бал студентів групи 'ПМ-21'?",
        "error_message": "column t2.id does not exist",
        "gold_sql": "SELECT avg(T1.середній_бал) FROM студенти AS T1 JOIN групи AS T2 ON T1.група_ід  =  T2.ід WHERE T2.назва  =  'ПМ-21';"
    },
    "університет_gen_004": {
        "db_id": "університет",
        "question": "Які аудиторії мають проектор та місткість понад 50 осіб?",
        "error_message": "column t2.id does not exist",
        "gold_sql": "SELECT T1.номер ,  T2.назва FROM аудиторії AS T1 JOIN будівлі AS T2 ON T1.будівля_ід  =  T2.ід WHERE T1.має_проектор IS TRUE AND T1.місткість  >  50;"
    },
    "університет_gen_005": {
        "db_id": "університет",
        "question": "Знайдіть імена та електронні адреси всіх завідувачів кафедр.",
        "error_message": "column t2.id does not exist",
        "gold_sql": "SELECT T2.прізвище ,  T2.імя ,  T2.електронна_пошта FROM кафедри AS T1 JOIN викладачі AS T2 ON T1.завідувач_ід  =  T2.ід;"
    },
    "університет_gen_006": {
        "db_id": "університет",
        "question": "Скільки курсів пропонує кожна кафедра?",
        "error_message": "column t1.id does not exist",
        "gold_sql": "SELECT T1.назва ,  count(T2.ід) FROM кафедри AS T1 JOIN курси AS T2 ON T1.ід  =  T2.кафедра_ід GROUP BY T1.ід, T1.назва;"
    },
    "університет_gen_010": {
        "db_id": "університет",
        "question": "Який розклад занять для курсу 'Програмування' у поточному семестрі?",
        "error_message": "column t1.id does not exist",
        "gold_sql": "SELECT T3.день_тижня ,  T3.час_початку ,  T3.час_кінця ,  T5.номер FROM курси AS T1 JOIN заняття AS T2 ON T1.ід  =  T2.курс_ід JOIN розклад_занять AS T3 ON T2.ід  =  T3.заняття_ід JOIN семестри AS T4 ON T2.семестр_ід  =  T4.ід JOIN аудиторії AS T5 ON T3.аудиторія_ід  =  T5.ід WHERE T1.назва  =  'Програмування' AND T4.є_активним IS TRUE;"
    },
    "університет_gen_011": {
        "db_id": "університет",
        "question": "Перелічіть усі факультети та імена їхніх деканів.",
        "error_message": "column t2.id does not exist",
        "gold_sql": "SELECT T1.назва ,  T2.прізвище ,  T2.імя FROM факультети AS T1 JOIN викладачі AS T2 ON T1.декан_ід  =  T2.ід;"
    },
    "університет_gen_012": {
        "db_id": "університет",
        "question": "Скільки студентів у кожній групі навчається на бюджетній формі?",
        "error_message": "column t1.id does not exist",
        "gold_sql": "SELECT T1.назва ,  count(T2.ід) FROM групи AS T1 JOIN студенти AS T2 ON T1.ід  =  T2.група_ід WHERE T2.фінансування  =  'Бюджет' GROUP BY T1.ід, T1.назва;"
    },
    "університет_gen_013": {
        "db_id": "університет",
        "question": "Знайдіть навчальні матеріали (назву та тип), доступні для курсу 'Математичний аналіз'.",
        "error_message": "column t2.id does not exist",
        "gold_sql": "SELECT T1.назва ,  T1.тип FROM навчальні_матеріали AS T1 JOIN курси AS T2 ON T1.курс_ід  =  T2.ід WHERE T2.назва  =  'Математичний аналіз';"
    }
}
