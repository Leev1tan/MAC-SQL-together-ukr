#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Генератор питань та SQL-запитів для бази даних "Бібліотека"

Цей скрипт створює набір питань українською мовою та відповідних SQL-запитів
різних рівнів складності (простий, середній, складний) для бази даних "Бібліотека".
"""

import json
import os
from datetime import datetime

# Структура для зберігання питань та SQL-запитів
questions_data = []

# Функція для додавання нового питання
def add_question(question_id, question, sql, difficulty):
    questions_data.append({
        "question_id": question_id,
        "db_id": "бібліотека",
        "db_path": "database/бібліотека",
        "question": question,
        "gold_sql": sql,
        "difficulty": difficulty,
        "evidence": None,
        "execution_details": {
            "execution_time": None,  # Буде заповнено пізніше
            "result_size": None  # Буде заповнено пізніше
        }
    })

# ПРОСТІ ПИТАННЯ (10 питань)

# 1. Загальний список книг
add_question(
    "бібліотека_001",
    "Які книги були видані після 2010 року?",
    """
    SELECT назва, автор, рік_видання
    FROM книги
    WHERE рік_видання > 2010
    ORDER BY рік_видання DESC
    """,
    "simple"
)

# 2. Пошук за автором
add_question(
    "бібліотека_002",
    "Які книги написав Тарас Шевченко?",
    """
    SELECT назва, рік_видання, кількість_сторінок
    FROM книги
    WHERE автор LIKE '%Шевченко Т%'
    ORDER BY назва
    """,
    "simple"
)

# 3. Пошук за жанром
add_question(
    "бібліотека_003",
    "Скільки книг є в жанрі фантастика?",
    """
    SELECT COUNT(*) AS кількість_книг
    FROM книги k
    JOIN жанри_книг жк ON k.id = жк.книга_id
    JOIN жанри ж ON жк.жанр_id = ж.id
    WHERE ж.назва = 'Фантастика'
    """,
    "simple"
)

# 4. Доступність книг
add_question(
    "бібліотека_004",
    "Які книги наразі доступні для видачі?",
    """
    SELECT к.назва, к.автор, к.рік_видання
    FROM книги к
    JOIN екземпляри_книг ек ON к.id = ек.книга_id
    WHERE ек.статус = 'Доступна'
    GROUP BY к.id, к.назва, к.автор, к.рік_видання
    ORDER BY к.назва
    """,
    "simple"
)

# 5. Пошук за видавництвом
add_question(
    "бібліотека_005",
    "Які книги видані видавництвом 'А-БА-БА-ГА-ЛА-МА-ГА'?",
    """
    SELECT назва, автор, рік_видання
    FROM книги
    WHERE видавництво = 'А-БА-БА-ГА-ЛА-МА-ГА'
    ORDER BY рік_видання DESC
    """,
    "simple"
)

# 6. Пошук найпопулярніших книг за кількістю видач
add_question(
    "бібліотека_006",
    "Які 5 книг користуються найбільшим попитом?",
    """
    SELECT к.назва, к.автор, COUNT(в.id) AS кількість_видач
    FROM книги к
    JOIN екземпляри_книг ек ON к.id = ек.книга_id
    JOIN видачі в ON ек.id = в.екземпляр_id
    GROUP BY к.id, к.назва, к.автор
    ORDER BY кількість_видач DESC
    LIMIT 5
    """,
    "simple"
)

# 7. Дата повернення книг
add_question(
    "бібліотека_007",
    "Які книги потрібно повернути протягом наступного тижня?",
    """
    SELECT к.назва, ч.прізвище, ч.імя, в.дата_повернення
    FROM видачі в
    JOIN екземпляри_книг ек ON в.екземпляр_id = ек.id
    JOIN книги к ON ек.книга_id = к.id
    JOIN читачі ч ON в.читач_id = ч.id
    WHERE в.дата_повернення BETWEEN CURRENT_DATE AND CURRENT_DATE + INTERVAL '7 days'
    AND в.фактична_дата_повернення IS NULL
    ORDER BY в.дата_повернення
    """,
    "simple"
)

# 8. Кількість книг за жанрами
add_question(
    "бібліотека_008",
    "Скільки книг є в кожному жанрі?",
    """
    SELECT ж.назва AS жанр, COUNT(жк.книга_id) AS кількість_книг
    FROM жанри ж
    LEFT JOIN жанри_книг жк ON ж.id = жк.жанр_id
    GROUP BY ж.id, ж.назва
    ORDER BY кількість_книг DESC
    """,
    "simple"
)

# 9. Пошук за ключовими словами
add_question(
    "бібліотека_009",
    "Які книги містять у назві слово 'історія'?",
    """
    SELECT назва, автор, рік_видання
    FROM книги
    WHERE назва ILIKE '%історія%'
    ORDER BY назва
    """,
    "simple"
)

# 10. Список боржників
add_question(
    "бібліотека_010",
    "Хто з читачів має прострочені книги?",
    """
    SELECT ч.прізвище, ч.імя, к.назва, в.дата_повернення
    FROM читачі ч
    JOIN видачі в ON ч.id = в.читач_id
    JOIN екземпляри_книг ек ON в.екземпляр_id = ек.id
    JOIN книги к ON ек.книга_id = к.id
    WHERE в.дата_повернення < CURRENT_DATE
    AND в.фактична_дата_повернення IS NULL
    ORDER BY в.дата_повернення
    """,
    "simple"
)

# СЕРЕДНЯ СКЛАДНІСТЬ (10 питань)

# 11. Статистика видач за періодом
add_question(
    "бібліотека_011",
    "Скільки книг було видано в кожному місяці поточного року?",
    """
    SELECT 
        EXTRACT(MONTH FROM дата_видачі) AS місяць,
        COUNT(*) AS кількість_видач
    FROM видачі
    WHERE EXTRACT(YEAR FROM дата_видачі) = EXTRACT(YEAR FROM CURRENT_DATE)
    GROUP BY EXTRACT(MONTH FROM дата_видачі)
    ORDER BY місяць
    """,
    "medium"
)

# 12. Середня тривалість користування книгами
add_question(
    "бібліотека_012",
    "Яка середня тривалість користування книгами за жанрами?",
    """
    SELECT 
        ж.назва AS жанр,
        ROUND(AVG(в.фактична_дата_повернення - в.дата_видачі)) AS середня_тривалість_днів
    FROM жанри ж
    JOIN жанри_книг жк ON ж.id = жк.жанр_id
    JOIN книги к ON жк.книга_id = к.id
    JOIN екземпляри_книг ек ON к.id = ек.книга_id
    JOIN видачі в ON ек.id = в.екземпляр_id
    WHERE в.фактична_дата_повернення IS NOT NULL
    GROUP BY ж.id, ж.назва
    ORDER BY середня_тривалість_днів DESC
    """,
    "medium"
)

# 13. Найактивніші читачі
add_question(
    "бібліотека_013",
    "Хто з читачів взяв найбільше книг за останні 3 місяці?",
    """
    SELECT 
        ч.прізвище,
        ч.імя,
        COUNT(в.id) AS кількість_книг
    FROM читачі ч
    JOIN видачі в ON ч.id = в.читач_id
    WHERE в.дата_видачі >= CURRENT_DATE - INTERVAL '3 months'
    GROUP BY ч.id, ч.прізвище, ч.імя
    ORDER BY кількість_книг DESC
    LIMIT 5
    """,
    "medium"
)

# 14. Книги з низькою доступністю
add_question(
    "бібліотека_014",
    "Які книги мають менше 3 доступних екземплярів?",
    """
    SELECT 
        к.назва,
        к.автор,
        COUNT(ек.id) AS всього_екземплярів,
        SUM(CASE WHEN ек.статус = 'Доступна' THEN 1 ELSE 0 END) AS доступно_екземплярів
    FROM книги к
    JOIN екземпляри_книг ек ON к.id = ек.книга_id
    GROUP BY к.id, к.назва, к.автор
    HAVING SUM(CASE WHEN ек.статус = 'Доступна' THEN 1 ELSE 0 END) < 3
    ORDER BY доступно_екземплярів, всього_екземплярів DESC
    """,
    "medium"
)

# 15. Рейтинг популярності видавництв
add_question(
    "бібліотека_015",
    "Які видавництва мають найбільше книг у бібліотеці?",
    """
    SELECT 
        видавництво,
        COUNT(*) AS кількість_книг,
        ROUND(AVG(рік_видання)) AS середній_рік_видання
    FROM книги
    GROUP BY видавництво
    ORDER BY кількість_книг DESC
    LIMIT 5
    """,
    "medium"
)

# 16. Розподіл книг за віковими категоріями
add_question(
    "бібліотека_016",
    "Скільки книг є в кожній віковій категорії?",
    """
    SELECT 
        вікова_категорія,
        COUNT(*) AS кількість_книг,
        ROUND(AVG(кількість_сторінок)) AS середня_кількість_сторінок
    FROM книги
    GROUP BY вікова_категорія
    ORDER BY вікова_категорія
    """,
    "medium"
)

# 17. Аналіз повернення книг
add_question(
    "бібліотека_017",
    "Який відсоток книг повертається вчасно?",
    """
    SELECT 
        ROUND(
            (COUNT(CASE WHEN фактична_дата_повернення <= дата_повернення THEN 1 END)::numeric / 
            COUNT(*)::numeric) * 100
        ) AS відсоток_вчасних_повернень
    FROM видачі
    WHERE фактична_дата_повернення IS NOT NULL
    """,
    "medium"
)

# 18. Тренди в читанні за роками
add_question(
    "бібліотека_018",
    "Як змінювалась популярність жанру фантастика протягом останніх 5 років?",
    """
    SELECT 
        EXTRACT(YEAR FROM в.дата_видачі) AS рік,
        COUNT(*) AS кількість_видач
    FROM видачі в
    JOIN екземпляри_книг ек ON в.екземпляр_id = ек.id
    JOIN книги к ON ек.книга_id = к.id
    JOIN жанри_книг жк ON к.id = жк.книга_id
    JOIN жанри ж ON жк.жанр_id = ж.id
    WHERE ж.назва = 'Фантастика'
    AND EXTRACT(YEAR FROM в.дата_видачі) >= EXTRACT(YEAR FROM CURRENT_DATE) - 5
    GROUP BY EXTRACT(YEAR FROM в.дата_видачі)
    ORDER BY рік
    """,
    "medium"
)

# 19. Знаходження читачів з подібними інтересами
add_question(
    "бібліотека_019",
    "Які читачі мають схожі літературні вподобання з читачем Петренко Іваном?",
    """
    WITH івана_жанри AS (
        SELECT жк.жанр_id, COUNT(*) AS кількість
        FROM видачі в
        JOIN екземпляри_книг ек ON в.екземпляр_id = ек.id
        JOIN книги к ON ек.книга_id = к.id
        JOIN жанри_книг жк ON к.id = жк.книга_id
        JOIN читачі ч ON в.читач_id = ч.id
        WHERE ч.прізвище = 'Петренко' AND ч.імя = 'Іван'
        GROUP BY жк.жанр_id
    )
    SELECT 
        ч.прізвище, 
        ч.імя,
        COUNT(DISTINCT жк.жанр_id) AS спільних_жанрів
    FROM читачі ч
    JOIN видачі в ON ч.id = в.читач_id
    JOIN екземпляри_книг ек ON в.екземпляр_id = ек.id
    JOIN книги к ON ек.книга_id = к.id
    JOIN жанри_книг жк ON к.id = жк.книга_id
    JOIN івана_жанри іж ON жк.жанр_id = іж.жанр_id
    WHERE ч.прізвище <> 'Петренко' OR ч.імя <> 'Іван'
    GROUP BY ч.id, ч.прізвище, ч.імя
    ORDER BY спільних_жанрів DESC
    LIMIT 5
    """,
    "medium"
)

# 20. Аналіз штрафів
add_question(
    "бібліотека_020",
    "Яка загальна сума штрафів, сплачених за останній рік?",
    """
    SELECT 
        SUM(сума) AS загальна_сума_штрафів
    FROM штрафи
    WHERE дата_сплати >= CURRENT_DATE - INTERVAL '1 year'
    """,
    "medium"
)

# СКЛАДНІ ПИТАННЯ (5 питань)

# 21. Комплексний аналіз з підзапитами
add_question(
    "бібліотека_021",
    "Які 5 книг мають найбільший середній час читання відносно їх обсягу (кількості сторінок)?",
    """
    SELECT 
        к.назва,
        к.автор,
        к.кількість_сторінок,
        ROUND(AVG(в.фактична_дата_повернення - в.дата_видачі)) AS днів_на_читання,
        ROUND(AVG(в.фактична_дата_повернення - в.дата_видачі) / к.кількість_сторінок * 100, 2) AS днів_на_100_сторінок
    FROM книги к
    JOIN екземпляри_книг ек ON к.id = ек.книга_id
    JOIN видачі в ON ек.id = в.екземпляр_id
    WHERE 
        в.фактична_дата_повернення IS NOT NULL
        AND к.кількість_сторінок > 0
    GROUP BY к.id, к.назва, к.автор, к.кількість_сторінок
    HAVING COUNT(в.id) >= 3 -- Щоб мати достатньо даних для статистики
    ORDER BY днів_на_100_сторінок DESC
    LIMIT 5
    """,
    "complex"
)

# 22. Складний багатотабличний запит з агрегацією
add_question(
    "бібліотека_022",
    "Які категорії читачів віддають перевагу яким жанрам книг?",
    """
    WITH жанр_читач AS (
        SELECT 
            ч.категорія,
            жк.жанр_id,
            ж.назва AS жанр,
            COUNT(*) AS кількість_видач
        FROM видачі в
        JOIN читачі ч ON в.читач_id = ч.id
        JOIN екземпляри_книг ек ON в.екземпляр_id = ек.id
        JOIN книги к ON ек.книга_id = к.id
        JOIN жанри_книг жк ON к.id = жк.книга_id
        JOIN жанри ж ON жк.жанр_id = ж.id
        GROUP BY ч.категорія, жк.жанр_id, ж.назва
    ),
    ранги_жанрів AS (
        SELECT 
            категорія,
            жанр,
            кількість_видач,
            RANK() OVER (PARTITION BY категорія ORDER BY кількість_видач DESC) AS ранг
        FROM жанр_читач
    )
    SELECT 
        категорія,
        STRING_AGG(жанр || ' (' || кількість_видач || ')', ', ' ORDER BY ранг) AS улюблені_жанри
    FROM ранги_жанрів
    WHERE ранг <= 3 -- Топ-3 жанри для кожної категорії
    GROUP BY категорія
    ORDER BY категорія
    """,
    "complex"
)

# 23. Річний аналіз з розрахунками
add_question(
    "бібліотека_023",
    "Як змінювався коефіцієнт оборотності книг (кількість видач / кількість екземплярів) за останні роки?",
    """
    WITH річна_статистика AS (
        SELECT 
            EXTRACT(YEAR FROM в.дата_видачі) AS рік,
            COUNT(DISTINCT ек.id) AS кількість_екземплярів,
            COUNT(в.id) AS кількість_видач
        FROM екземпляри_книг ек
        LEFT JOIN видачі в ON ек.id = в.екземпляр_id AND 
                              EXTRACT(YEAR FROM в.дата_видачі) >= EXTRACT(YEAR FROM CURRENT_DATE) - 5
        WHERE 
            ек.дата_надходження <= MAKE_DATE(EXTRACT(YEAR FROM CURRENT_DATE)::integer, 12, 31)
        GROUP BY EXTRACT(YEAR FROM в.дата_видачі)
        HAVING EXTRACT(YEAR FROM в.дата_видачі) IS NOT NULL
    )
    SELECT 
        рік,
        кількість_екземплярів,
        кількість_видач,
        ROUND((кількість_видач::numeric / кількість_екземплярів::numeric)::numeric, 2) AS коефіцієнт_оборотності
    FROM річна_статистика
    ORDER BY рік
    """,
    "complex"
)

# 24. Динамічна категоризація та відбір
add_question(
    "бібліотека_024",
    "Які книги найчастіше затримують читачі різних вікових категорій?",
    """
    WITH затримки AS (
        SELECT 
            к.id AS книга_id,
            к.назва,
            к.автор,
            CASE 
                WHEN ч.вік < 18 THEN 'Діти'
                WHEN ч.вік BETWEEN 18 AND 25 THEN 'Молодь'
                WHEN ч.вік BETWEEN 26 AND 60 THEN 'Дорослі'
                ELSE 'Пенсіонери'
            END AS вікова_група,
            COUNT(*) AS кількість_затримок,
            AVG(в.фактична_дата_повернення - в.дата_повернення) AS середня_затримка
        FROM видачі в
        JOIN екземпляри_книг ек ON в.екземпляр_id = ек.id
        JOIN книги к ON ек.книга_id = к.id
        JOIN читачі ч ON в.читач_id = ч.id
        WHERE 
            в.фактична_дата_повернення > в.дата_повернення
        GROUP BY к.id, к.назва, к.автор, вікова_група
    ),
    ранжування AS (
        SELECT 
            назва,
            автор,
            вікова_група,
            кількість_затримок,
            середня_затримка,
            RANK() OVER (PARTITION BY вікова_група ORDER BY кількість_затримок DESC, середня_затримка DESC) AS ранг
        FROM затримки
    )
    SELECT 
        вікова_група,
        назва,
        автор,
        кількість_затримок,
        ROUND(середня_затримка) AS середня_затримка_днів
    FROM ранжування
    WHERE ранг <= 3
    ORDER BY вікова_група, ранг
    """,
    "complex"
)

# 25. Комплексний аналіз бібліотечного фонду
add_question(
    "бібліотека_025",
    "Який вигляд має бібліотечний фонд з точки зору віку книг, стану та оборотності?",
    """
    WITH статистика_книг AS (
        SELECT 
            к.id,
            к.назва,
            к.автор,
            к.рік_видання,
            COUNT(ек.id) AS кількість_екземплярів,
            SUM(CASE WHEN ек.статус = 'Доступна' THEN 1 ELSE 0 END) AS доступно,
            SUM(CASE WHEN ек.стан = 'Новий' THEN 1 
                    WHEN ек.стан = 'Гарний' THEN 0.8
                    WHEN ек.стан = 'Задовільний' THEN 0.5
                    ELSE 0.2 END) / COUNT(ек.id) AS індекс_стану,
            COUNT(в.id) AS кількість_видач
        FROM книги к
        JOIN екземпляри_книг ек ON к.id = ек.книга_id
        LEFT JOIN видачі в ON ек.id = в.екземпляр_id AND 
                            в.дата_видачі >= CURRENT_DATE - INTERVAL '2 years'
        GROUP BY к.id, к.назва, к.автор, к.рік_видання
    ),
    класифікація AS (
        SELECT 
            id,
            назва,
            автор,
            рік_видання,
            кількість_екземплярів,
            доступно,
            CASE 
                WHEN EXTRACT(YEAR FROM CURRENT_DATE) - рік_видання <= 5 THEN 'Нові'
                WHEN EXTRACT(YEAR FROM CURRENT_DATE) - рік_видання <= 20 THEN 'Сучасні'
                WHEN EXTRACT(YEAR FROM CURRENT_DATE) - рік_видання <= 50 THEN 'Класика'
                ELSE 'Раритет'
            END AS вікова_категорія,
            ROUND(індекс_стану::numeric, 2) AS індекс_стану,
            ROUND((кількість_видач::numeric / кількість_екземплярів::numeric)::numeric, 2) AS коефіцієнт_оборотності
        FROM статистика_книг
    )
    SELECT 
        вікова_категорія,
        COUNT(*) AS кількість_найменувань,
        SUM(кількість_екземплярів) AS кількість_екземплярів,
        ROUND(AVG(індекс_стану)::numeric, 2) AS середній_індекс_стану,
        ROUND(AVG(коефіцієнт_оборотності)::numeric, 2) AS середній_коефіцієнт_оборотності
    FROM класифікація
    GROUP BY вікова_категорія
    ORDER BY вікова_категорія
    """,
    "complex"
)

# Зберігаємо питання в JSON файл
if not os.path.exists("bird-ukr/questions"):
    os.makedirs("bird-ukr/questions")

output_path = "bird-ukr/questions/бібліотека_questions.json"
with open(output_path, 'w', encoding='utf-8') as f:
    json.dump(questions_data, f, ensure_ascii=False, indent=4)

print(f"Створено {len(questions_data)} питань та SQL-запитів для бази даних 'Бібліотека'.")
print(f"Збережено у файл: {output_path}") 